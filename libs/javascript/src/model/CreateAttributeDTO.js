/**
 * SQE API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateAttributeValueDTO from './CreateAttributeValueDTO';

/**
 * The CreateAttributeDTO model module.
 * @module model/CreateAttributeDTO
 * @version 0.7.2
 */
class CreateAttributeDTO {
    /**
     * Constructs a new <code>CreateAttributeDTO</code>.
     * @alias module:model/CreateAttributeDTO
     * @param attributeName {String} 
     * @param values {Array.<module:model/CreateAttributeValueDTO>} 
     */
    constructor(attributeName, values) { 
        
        CreateAttributeDTO.initialize(this, attributeName, values);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, attributeName, values) { 
        obj['attributeName'] = attributeName;
        obj['values'] = values;
    }

    /**
     * Constructs a <code>CreateAttributeDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateAttributeDTO} obj Optional instance to populate.
     * @return {module:model/CreateAttributeDTO} The populated <code>CreateAttributeDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateAttributeDTO();

            if (data.hasOwnProperty('attributeName')) {
                obj['attributeName'] = ApiClient.convertToType(data['attributeName'], 'String');
            }
            if (data.hasOwnProperty('values')) {
                obj['values'] = ApiClient.convertToType(data['values'], [CreateAttributeValueDTO]);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('editable')) {
                obj['editable'] = ApiClient.convertToType(data['editable'], 'Boolean');
            }
            if (data.hasOwnProperty('removable')) {
                obj['removable'] = ApiClient.convertToType(data['removable'], 'Boolean');
            }
            if (data.hasOwnProperty('repeatable')) {
                obj['repeatable'] = ApiClient.convertToType(data['repeatable'], 'Boolean');
            }
            if (data.hasOwnProperty('batchEditable')) {
                obj['batchEditable'] = ApiClient.convertToType(data['batchEditable'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {String} attributeName
 */
CreateAttributeDTO.prototype['attributeName'] = undefined;

/**
 * @member {Array.<module:model/CreateAttributeValueDTO>} values
 */
CreateAttributeDTO.prototype['values'] = undefined;

/**
 * @member {String} description
 */
CreateAttributeDTO.prototype['description'] = undefined;

/**
 * @member {Boolean} editable
 */
CreateAttributeDTO.prototype['editable'] = undefined;

/**
 * @member {Boolean} removable
 */
CreateAttributeDTO.prototype['removable'] = undefined;

/**
 * @member {Boolean} repeatable
 */
CreateAttributeDTO.prototype['repeatable'] = undefined;

/**
 * @member {Boolean} batchEditable
 */
CreateAttributeDTO.prototype['batchEditable'] = undefined;






export default CreateAttributeDTO;

