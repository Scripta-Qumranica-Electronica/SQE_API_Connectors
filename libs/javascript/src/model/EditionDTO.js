/**
 * SQE API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DetailedEditorRightsDTO from './DetailedEditorRightsDTO';
import EditionManuscriptMetricsDTO from './EditionManuscriptMetricsDTO';
import PermissionDTO from './PermissionDTO';
import UserDTO from './UserDTO';

/**
 * The EditionDTO model module.
 * @module model/EditionDTO
 * @version v1
 */
class EditionDTO {
    /**
     * Constructs a new <code>EditionDTO</code>.
     * @alias module:model/EditionDTO
     * @param id {Number} 
     * @param name {String} 
     * @param editionDataEditorId {Number} 
     * @param permission {module:model/PermissionDTO} 
     * @param owner {module:model/UserDTO} 
     * @param shares {Array.<module:model/DetailedEditorRightsDTO>} 
     * @param metrics {module:model/EditionManuscriptMetricsDTO} 
     * @param locked {Boolean} 
     * @param isPublic {Boolean} 
     * @param copyright {String} 
     */
    constructor(id, name, editionDataEditorId, permission, owner, shares, metrics, locked, isPublic, copyright) { 
        
        EditionDTO.initialize(this, id, name, editionDataEditorId, permission, owner, shares, metrics, locked, isPublic, copyright);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, name, editionDataEditorId, permission, owner, shares, metrics, locked, isPublic, copyright) { 
        obj['id'] = id;
        obj['name'] = name;
        obj['editionDataEditorId'] = editionDataEditorId;
        obj['permission'] = permission;
        obj['owner'] = owner;
        obj['shares'] = shares;
        obj['metrics'] = metrics;
        obj['locked'] = locked;
        obj['isPublic'] = isPublic;
        obj['copyright'] = copyright;
    }

    /**
     * Constructs a <code>EditionDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EditionDTO} obj Optional instance to populate.
     * @return {module:model/EditionDTO} The populated <code>EditionDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EditionDTO();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('editionDataEditorId')) {
                obj['editionDataEditorId'] = ApiClient.convertToType(data['editionDataEditorId'], 'Number');
            }
            if (data.hasOwnProperty('permission')) {
                obj['permission'] = ApiClient.convertToType(data['permission'], PermissionDTO);
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = ApiClient.convertToType(data['owner'], UserDTO);
            }
            if (data.hasOwnProperty('thumbnailUrl')) {
                obj['thumbnailUrl'] = ApiClient.convertToType(data['thumbnailUrl'], 'String');
            }
            if (data.hasOwnProperty('shares')) {
                obj['shares'] = ApiClient.convertToType(data['shares'], [DetailedEditorRightsDTO]);
            }
            if (data.hasOwnProperty('metrics')) {
                obj['metrics'] = ApiClient.convertToType(data['metrics'], EditionManuscriptMetricsDTO);
            }
            if (data.hasOwnProperty('locked')) {
                obj['locked'] = ApiClient.convertToType(data['locked'], 'Boolean');
            }
            if (data.hasOwnProperty('isPublic')) {
                obj['isPublic'] = ApiClient.convertToType(data['isPublic'], 'Boolean');
            }
            if (data.hasOwnProperty('lastEdit')) {
                obj['lastEdit'] = ApiClient.convertToType(data['lastEdit'], 'Date');
            }
            if (data.hasOwnProperty('copyright')) {
                obj['copyright'] = ApiClient.convertToType(data['copyright'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
EditionDTO.prototype['id'] = undefined;

/**
 * @member {String} name
 */
EditionDTO.prototype['name'] = undefined;

/**
 * @member {Number} editionDataEditorId
 */
EditionDTO.prototype['editionDataEditorId'] = undefined;

/**
 * @member {module:model/PermissionDTO} permission
 */
EditionDTO.prototype['permission'] = undefined;

/**
 * @member {module:model/UserDTO} owner
 */
EditionDTO.prototype['owner'] = undefined;

/**
 * @member {String} thumbnailUrl
 */
EditionDTO.prototype['thumbnailUrl'] = undefined;

/**
 * @member {Array.<module:model/DetailedEditorRightsDTO>} shares
 */
EditionDTO.prototype['shares'] = undefined;

/**
 * @member {module:model/EditionManuscriptMetricsDTO} metrics
 */
EditionDTO.prototype['metrics'] = undefined;

/**
 * @member {Boolean} locked
 */
EditionDTO.prototype['locked'] = undefined;

/**
 * @member {Boolean} isPublic
 */
EditionDTO.prototype['isPublic'] = undefined;

/**
 * @member {Date} lastEdit
 */
EditionDTO.prototype['lastEdit'] = undefined;

/**
 * @member {String} copyright
 */
EditionDTO.prototype['copyright'] = undefined;






export default EditionDTO;

