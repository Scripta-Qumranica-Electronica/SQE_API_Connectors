/**
 * SQE API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CharacterShapeDTO model module.
 * @module model/CharacterShapeDTO
 * @version v1
 */
class CharacterShapeDTO {
    /**
     * Constructs a new <code>CharacterShapeDTO</code>.
     * @alias module:model/CharacterShapeDTO
     * @param id {Number} 
     * @param character {String} 
     * @param polygon {String} 
     * @param imageURL {String} 
     * @param attributes {Array.<String>} 
     */
    constructor(id, character, polygon, imageURL, attributes) { 
        
        CharacterShapeDTO.initialize(this, id, character, polygon, imageURL, attributes);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, character, polygon, imageURL, attributes) { 
        obj['id'] = id;
        obj['character'] = character;
        obj['polygon'] = polygon;
        obj['imageURL'] = imageURL;
        obj['attributes'] = attributes;
    }

    /**
     * Constructs a <code>CharacterShapeDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CharacterShapeDTO} obj Optional instance to populate.
     * @return {module:model/CharacterShapeDTO} The populated <code>CharacterShapeDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CharacterShapeDTO();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('character')) {
                obj['character'] = ApiClient.convertToType(data['character'], 'String');
            }
            if (data.hasOwnProperty('polygon')) {
                obj['polygon'] = ApiClient.convertToType(data['polygon'], 'String');
            }
            if (data.hasOwnProperty('imageURL')) {
                obj['imageURL'] = ApiClient.convertToType(data['imageURL'], 'String');
            }
            if (data.hasOwnProperty('rotation')) {
                obj['rotation'] = ApiClient.convertToType(data['rotation'], 'Number');
            }
            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
CharacterShapeDTO.prototype['id'] = undefined;

/**
 * @member {String} character
 */
CharacterShapeDTO.prototype['character'] = undefined;

/**
 * @member {String} polygon
 */
CharacterShapeDTO.prototype['polygon'] = undefined;

/**
 * @member {String} imageURL
 */
CharacterShapeDTO.prototype['imageURL'] = undefined;

/**
 * @member {Number} rotation
 */
CharacterShapeDTO.prototype['rotation'] = undefined;

/**
 * @member {Array.<String>} attributes
 */
CharacterShapeDTO.prototype['attributes'] = undefined;






export default CharacterShapeDTO;

