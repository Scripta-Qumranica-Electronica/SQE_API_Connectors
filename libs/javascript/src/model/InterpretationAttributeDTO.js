/**
 * SQE API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CommentaryDTO from './CommentaryDTO';

/**
 * The InterpretationAttributeDTO model module.
 * @module model/InterpretationAttributeDTO
 * @version 0.7.0
 */
class InterpretationAttributeDTO {
    /**
     * Constructs a new <code>InterpretationAttributeDTO</code>.
     * @alias module:model/InterpretationAttributeDTO
     * @param interpretationAttributeId {Number} 
     * @param attributeString {String} 
     * @param attributeValueString {String} 
     * @param creatorId {Number} 
     * @param editorId {Number} 
     * @param attributeId {Number} 
     * @param attributeValueId {Number} 
     */
    constructor(interpretationAttributeId, attributeString, attributeValueString, creatorId, editorId, attributeId, attributeValueId) { 
        
        InterpretationAttributeDTO.initialize(this, interpretationAttributeId, attributeString, attributeValueString, creatorId, editorId, attributeId, attributeValueId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, interpretationAttributeId, attributeString, attributeValueString, creatorId, editorId, attributeId, attributeValueId) { 
        obj['interpretationAttributeId'] = interpretationAttributeId;
        obj['attributeString'] = attributeString;
        obj['attributeValueString'] = attributeValueString;
        obj['creatorId'] = creatorId;
        obj['editorId'] = editorId;
        obj['attributeId'] = attributeId;
        obj['attributeValueId'] = attributeValueId;
    }

    /**
     * Constructs a <code>InterpretationAttributeDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InterpretationAttributeDTO} obj Optional instance to populate.
     * @return {module:model/InterpretationAttributeDTO} The populated <code>InterpretationAttributeDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InterpretationAttributeDTO();

            if (data.hasOwnProperty('interpretationAttributeId')) {
                obj['interpretationAttributeId'] = ApiClient.convertToType(data['interpretationAttributeId'], 'Number');
            }
            if (data.hasOwnProperty('attributeString')) {
                obj['attributeString'] = ApiClient.convertToType(data['attributeString'], 'String');
            }
            if (data.hasOwnProperty('attributeValueString')) {
                obj['attributeValueString'] = ApiClient.convertToType(data['attributeValueString'], 'String');
            }
            if (data.hasOwnProperty('creatorId')) {
                obj['creatorId'] = ApiClient.convertToType(data['creatorId'], 'Number');
            }
            if (data.hasOwnProperty('editorId')) {
                obj['editorId'] = ApiClient.convertToType(data['editorId'], 'Number');
            }
            if (data.hasOwnProperty('commentary')) {
                obj['commentary'] = ApiClient.convertToType(data['commentary'], CommentaryDTO);
            }
            if (data.hasOwnProperty('sequence')) {
                obj['sequence'] = ApiClient.convertToType(data['sequence'], 'Number');
            }
            if (data.hasOwnProperty('attributeId')) {
                obj['attributeId'] = ApiClient.convertToType(data['attributeId'], 'Number');
            }
            if (data.hasOwnProperty('attributeValueId')) {
                obj['attributeValueId'] = ApiClient.convertToType(data['attributeValueId'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} interpretationAttributeId
 */
InterpretationAttributeDTO.prototype['interpretationAttributeId'] = undefined;

/**
 * @member {String} attributeString
 */
InterpretationAttributeDTO.prototype['attributeString'] = undefined;

/**
 * @member {String} attributeValueString
 */
InterpretationAttributeDTO.prototype['attributeValueString'] = undefined;

/**
 * @member {Number} creatorId
 */
InterpretationAttributeDTO.prototype['creatorId'] = undefined;

/**
 * @member {Number} editorId
 */
InterpretationAttributeDTO.prototype['editorId'] = undefined;

/**
 * @member {module:model/CommentaryDTO} commentary
 */
InterpretationAttributeDTO.prototype['commentary'] = undefined;

/**
 * @member {Number} sequence
 */
InterpretationAttributeDTO.prototype['sequence'] = undefined;

/**
 * @member {Number} attributeId
 */
InterpretationAttributeDTO.prototype['attributeId'] = undefined;

/**
 * @member {Number} attributeValueId
 */
InterpretationAttributeDTO.prototype['attributeValueId'] = undefined;






export default InterpretationAttributeDTO;

