/* tslint:disable */
/* eslint-disable */
/**
 * SQE API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    SideDesignation,
    SideDesignationFromJSON,
    SideDesignationFromJSONTyped,
    SideDesignationToJSON,
} from './';

/**
 * 
 * @export
 * @interface CatalogueMatchDTO
 */
export interface CatalogueMatchDTO {
    /**
     * 
     * @type {number}
     * @memberof CatalogueMatchDTO
     */
    imageCatalogId: number;
    /**
     * 
     * @type {string}
     * @memberof CatalogueMatchDTO
     */
    institution: string;
    /**
     * 
     * @type {string}
     * @memberof CatalogueMatchDTO
     */
    catalogueNumber1: string;
    /**
     * 
     * @type {string}
     * @memberof CatalogueMatchDTO
     */
    catalogueNumber2?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CatalogueMatchDTO
     */
    proxy?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CatalogueMatchDTO
     */
    url: string;
    /**
     * 
     * @type {string}
     * @memberof CatalogueMatchDTO
     */
    filename: string;
    /**
     * 
     * @type {string}
     * @memberof CatalogueMatchDTO
     */
    suffix: string;
    /**
     * 
     * @type {string}
     * @memberof CatalogueMatchDTO
     */
    thumbnail: string;
    /**
     * 
     * @type {string}
     * @memberof CatalogueMatchDTO
     */
    license: string;
    /**
     * 
     * @type {number}
     * @memberof CatalogueMatchDTO
     */
    iaaEditionCatalogueId: number;
    /**
     * 
     * @type {string}
     * @memberof CatalogueMatchDTO
     */
    manuscriptName: string;
    /**
     * 
     * @type {string}
     * @memberof CatalogueMatchDTO
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CatalogueMatchDTO
     */
    matchAuthor: string;
    /**
     * 
     * @type {string}
     * @memberof CatalogueMatchDTO
     */
    matchConfirmationAuthor?: string | null;
    /**
     * 
     * @type {number}
     * @memberof CatalogueMatchDTO
     */
    matchId: number;
    /**
     * 
     * @type {Date}
     * @memberof CatalogueMatchDTO
     */
    dateOfMatch: Date;
    /**
     * 
     * @type {Date}
     * @memberof CatalogueMatchDTO
     */
    dateOfConfirmation?: Date | null;
    /**
     * 
     * @type {SideDesignation}
     * @memberof CatalogueMatchDTO
     */
    catalogSide?: SideDesignation;
    /**
     * 
     * @type {string}
     * @memberof CatalogueMatchDTO
     */
    imagedObjectId: string;
    /**
     * 
     * @type {number}
     * @memberof CatalogueMatchDTO
     */
    manuscriptId: number;
    /**
     * 
     * @type {string}
     * @memberof CatalogueMatchDTO
     */
    editionName: string;
    /**
     * 
     * @type {string}
     * @memberof CatalogueMatchDTO
     */
    editionVolume: string;
    /**
     * 
     * @type {string}
     * @memberof CatalogueMatchDTO
     */
    editionLocation1: string;
    /**
     * 
     * @type {string}
     * @memberof CatalogueMatchDTO
     */
    editionLocation2: string;
    /**
     * 
     * @type {SideDesignation}
     * @memberof CatalogueMatchDTO
     */
    editionSide: SideDesignation;
    /**
     * 
     * @type {string}
     * @memberof CatalogueMatchDTO
     */
    comment?: string | null;
    /**
     * 
     * @type {number}
     * @memberof CatalogueMatchDTO
     */
    textFragmentId: number;
    /**
     * 
     * @type {number}
     * @memberof CatalogueMatchDTO
     */
    editionId: number;
    /**
     * 
     * @type {boolean}
     * @memberof CatalogueMatchDTO
     */
    confirmed?: boolean | null;
}

export function CatalogueMatchDTOFromJSON(json: any): CatalogueMatchDTO {
    return CatalogueMatchDTOFromJSONTyped(json, false);
}

export function CatalogueMatchDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogueMatchDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'imageCatalogId': json['imageCatalogId'],
        'institution': json['institution'],
        'catalogueNumber1': json['catalogueNumber1'],
        'catalogueNumber2': !exists(json, 'catalogueNumber2') ? undefined : json['catalogueNumber2'],
        'proxy': !exists(json, 'proxy') ? undefined : json['proxy'],
        'url': json['url'],
        'filename': json['filename'],
        'suffix': json['suffix'],
        'thumbnail': json['thumbnail'],
        'license': json['license'],
        'iaaEditionCatalogueId': json['iaaEditionCatalogueId'],
        'manuscriptName': json['manuscriptName'],
        'name': json['name'],
        'matchAuthor': json['matchAuthor'],
        'matchConfirmationAuthor': !exists(json, 'matchConfirmationAuthor') ? undefined : json['matchConfirmationAuthor'],
        'matchId': json['matchId'],
        'dateOfMatch': (new Date(json['dateOfMatch'])),
        'dateOfConfirmation': !exists(json, 'dateOfConfirmation') ? undefined : (json['dateOfConfirmation'] === null ? null : new Date(json['dateOfConfirmation'])),
        'catalogSide': !exists(json, 'catalogSide') ? undefined : SideDesignationFromJSON(json['catalogSide']),
        'imagedObjectId': json['imagedObjectId'],
        'manuscriptId': json['manuscriptId'],
        'editionName': json['editionName'],
        'editionVolume': json['editionVolume'],
        'editionLocation1': json['editionLocation1'],
        'editionLocation2': json['editionLocation2'],
        'editionSide': SideDesignationFromJSON(json['editionSide']),
        'comment': !exists(json, 'comment') ? undefined : json['comment'],
        'textFragmentId': json['textFragmentId'],
        'editionId': json['editionId'],
        'confirmed': !exists(json, 'confirmed') ? undefined : json['confirmed'],
    };
}

export function CatalogueMatchDTOToJSON(value?: CatalogueMatchDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'imageCatalogId': value.imageCatalogId,
        'institution': value.institution,
        'catalogueNumber1': value.catalogueNumber1,
        'catalogueNumber2': value.catalogueNumber2,
        'proxy': value.proxy,
        'url': value.url,
        'filename': value.filename,
        'suffix': value.suffix,
        'thumbnail': value.thumbnail,
        'license': value.license,
        'iaaEditionCatalogueId': value.iaaEditionCatalogueId,
        'manuscriptName': value.manuscriptName,
        'name': value.name,
        'matchAuthor': value.matchAuthor,
        'matchConfirmationAuthor': value.matchConfirmationAuthor,
        'matchId': value.matchId,
        'dateOfMatch': (value.dateOfMatch.toISOString()),
        'dateOfConfirmation': value.dateOfConfirmation === undefined ? undefined : (value.dateOfConfirmation === null ? null : value.dateOfConfirmation.toISOString()),
        'catalogSide': SideDesignationToJSON(value.catalogSide),
        'imagedObjectId': value.imagedObjectId,
        'manuscriptId': value.manuscriptId,
        'editionName': value.editionName,
        'editionVolume': value.editionVolume,
        'editionLocation1': value.editionLocation1,
        'editionLocation2': value.editionLocation2,
        'editionSide': SideDesignationToJSON(value.editionSide),
        'comment': value.comment,
        'textFragmentId': value.textFragmentId,
        'editionId': value.editionId,
        'confirmed': value.confirmed,
    };
}


