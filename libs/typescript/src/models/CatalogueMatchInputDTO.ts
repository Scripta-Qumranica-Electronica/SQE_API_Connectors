/* tslint:disable */
/* eslint-disable */
/**
 * SQE API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    SideDesignation,
    SideDesignationFromJSON,
    SideDesignationFromJSONTyped,
    SideDesignationToJSON,
} from './';

/**
 * 
 * @export
 * @interface CatalogueMatchInputDTO
 */
export interface CatalogueMatchInputDTO {
    /**
     * 
     * @type {SideDesignation}
     * @memberof CatalogueMatchInputDTO
     */
    catalogSide?: SideDesignation;
    /**
     * 
     * @type {string}
     * @memberof CatalogueMatchInputDTO
     */
    imagedObjectId: string;
    /**
     * 
     * @type {number}
     * @memberof CatalogueMatchInputDTO
     */
    manuscriptId: number;
    /**
     * 
     * @type {string}
     * @memberof CatalogueMatchInputDTO
     */
    editionName: string;
    /**
     * 
     * @type {string}
     * @memberof CatalogueMatchInputDTO
     */
    editionVolume: string;
    /**
     * 
     * @type {string}
     * @memberof CatalogueMatchInputDTO
     */
    editionLocation1: string;
    /**
     * 
     * @type {string}
     * @memberof CatalogueMatchInputDTO
     */
    editionLocation2: string;
    /**
     * 
     * @type {SideDesignation}
     * @memberof CatalogueMatchInputDTO
     */
    editionSide: SideDesignation;
    /**
     * 
     * @type {string}
     * @memberof CatalogueMatchInputDTO
     */
    comment?: string | null;
    /**
     * 
     * @type {number}
     * @memberof CatalogueMatchInputDTO
     */
    textFragmentId: number;
    /**
     * 
     * @type {number}
     * @memberof CatalogueMatchInputDTO
     */
    editionId: number;
    /**
     * 
     * @type {boolean}
     * @memberof CatalogueMatchInputDTO
     */
    confirmed?: boolean | null;
}

export function CatalogueMatchInputDTOFromJSON(json: any): CatalogueMatchInputDTO {
    return CatalogueMatchInputDTOFromJSONTyped(json, false);
}

export function CatalogueMatchInputDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogueMatchInputDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'catalogSide': !exists(json, 'catalogSide') ? undefined : SideDesignationFromJSON(json['catalogSide']),
        'imagedObjectId': json['imagedObjectId'],
        'manuscriptId': json['manuscriptId'],
        'editionName': json['editionName'],
        'editionVolume': json['editionVolume'],
        'editionLocation1': json['editionLocation1'],
        'editionLocation2': json['editionLocation2'],
        'editionSide': SideDesignationFromJSON(json['editionSide']),
        'comment': !exists(json, 'comment') ? undefined : json['comment'],
        'textFragmentId': json['textFragmentId'],
        'editionId': json['editionId'],
        'confirmed': !exists(json, 'confirmed') ? undefined : json['confirmed'],
    };
}

export function CatalogueMatchInputDTOToJSON(value?: CatalogueMatchInputDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'catalogSide': SideDesignationToJSON(value.catalogSide),
        'imagedObjectId': value.imagedObjectId,
        'manuscriptId': value.manuscriptId,
        'editionName': value.editionName,
        'editionVolume': value.editionVolume,
        'editionLocation1': value.editionLocation1,
        'editionLocation2': value.editionLocation2,
        'editionSide': SideDesignationToJSON(value.editionSide),
        'comment': value.comment,
        'textFragmentId': value.textFragmentId,
        'editionId': value.editionId,
        'confirmed': value.confirmed,
    };
}


