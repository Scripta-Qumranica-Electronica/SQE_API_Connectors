/* tslint:disable */
/* eslint-disable */
/**
 * SQE API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TranslateDTO,
    TranslateDTOFromJSON,
    TranslateDTOFromJSONTyped,
    TranslateDTOToJSON,
} from './';

/**
 * 
 * @export
 * @interface InterpretationRoiDTO
 */
export interface InterpretationRoiDTO {
    /**
     * 
     * @type {number}
     * @memberof InterpretationRoiDTO
     */
    creatorId: number;
    /**
     * 
     * @type {number}
     * @memberof InterpretationRoiDTO
     */
    editorId: number;
    /**
     * 
     * @type {number}
     * @memberof InterpretationRoiDTO
     */
    interpretationRoiId: number;
    /**
     * 
     * @type {number}
     * @memberof InterpretationRoiDTO
     */
    artefactId: number;
    /**
     * 
     * @type {number}
     * @memberof InterpretationRoiDTO
     */
    signInterpretationId: number;
    /**
     * 
     * @type {string}
     * @memberof InterpretationRoiDTO
     */
    shape: string;
    /**
     * 
     * @type {TranslateDTO}
     * @memberof InterpretationRoiDTO
     */
    translate: TranslateDTO;
    /**
     * 
     * @type {number}
     * @memberof InterpretationRoiDTO
     */
    stanceRotation?: number;
    /**
     * 
     * @type {boolean}
     * @memberof InterpretationRoiDTO
     */
    exceptional: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof InterpretationRoiDTO
     */
    valuesSet: boolean;
}

export function InterpretationRoiDTOFromJSON(json: any): InterpretationRoiDTO {
    return InterpretationRoiDTOFromJSONTyped(json, false);
}

export function InterpretationRoiDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): InterpretationRoiDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'creatorId': json['creatorId'],
        'editorId': json['editorId'],
        'interpretationRoiId': json['interpretationRoiId'],
        'artefactId': json['artefactId'],
        'signInterpretationId': json['signInterpretationId'],
        'shape': json['shape'],
        'translate': TranslateDTOFromJSON(json['translate']),
        'stanceRotation': !exists(json, 'stanceRotation') ? undefined : json['stanceRotation'],
        'exceptional': json['exceptional'],
        'valuesSet': json['valuesSet'],
    };
}

export function InterpretationRoiDTOToJSON(value?: InterpretationRoiDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'creatorId': value.creatorId,
        'editorId': value.editorId,
        'interpretationRoiId': value.interpretationRoiId,
        'artefactId': value.artefactId,
        'signInterpretationId': value.signInterpretationId,
        'shape': value.shape,
        'translate': TranslateDTOToJSON(value.translate),
        'stanceRotation': value.stanceRotation,
        'exceptional': value.exceptional,
        'valuesSet': value.valuesSet,
    };
}


