/* tslint:disable */
/* eslint-disable */
/**
 * SQE API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CreateAttributeValueDTO,
    CreateAttributeValueDTOFromJSON,
    CreateAttributeValueDTOFromJSONTyped,
    CreateAttributeValueDTOToJSON,
    UpdateAttributeValueDTO,
    UpdateAttributeValueDTOFromJSON,
    UpdateAttributeValueDTOFromJSONTyped,
    UpdateAttributeValueDTOToJSON,
} from './';

/**
 * 
 * @export
 * @interface UpdateAttributeDTO
 */
export interface UpdateAttributeDTO {
    /**
     * 
     * @type {Array<CreateAttributeValueDTO>}
     * @memberof UpdateAttributeDTO
     */
    createValues: Array<CreateAttributeValueDTO>;
    /**
     * 
     * @type {Array<UpdateAttributeValueDTO>}
     * @memberof UpdateAttributeDTO
     */
    updateValues: Array<UpdateAttributeValueDTO>;
    /**
     * 
     * @type {Array<number>}
     * @memberof UpdateAttributeDTO
     */
    deleteValues: Array<number>;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateAttributeDTO
     */
    editable?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateAttributeDTO
     */
    removable?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateAttributeDTO
     */
    repeatable?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateAttributeDTO
     */
    batchEditable?: boolean;
}

export function UpdateAttributeDTOFromJSON(json: any): UpdateAttributeDTO {
    return UpdateAttributeDTOFromJSONTyped(json, false);
}

export function UpdateAttributeDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateAttributeDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'createValues': ((json['createValues'] as Array<any>).map(CreateAttributeValueDTOFromJSON)),
        'updateValues': ((json['updateValues'] as Array<any>).map(UpdateAttributeValueDTOFromJSON)),
        'deleteValues': json['deleteValues'],
        'editable': !exists(json, 'editable') ? undefined : json['editable'],
        'removable': !exists(json, 'removable') ? undefined : json['removable'],
        'repeatable': !exists(json, 'repeatable') ? undefined : json['repeatable'],
        'batchEditable': !exists(json, 'batchEditable') ? undefined : json['batchEditable'],
    };
}

export function UpdateAttributeDTOToJSON(value?: UpdateAttributeDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'createValues': ((value.createValues as Array<any>).map(CreateAttributeValueDTOToJSON)),
        'updateValues': ((value.updateValues as Array<any>).map(UpdateAttributeValueDTOToJSON)),
        'deleteValues': value.deleteValues,
        'editable': value.editable,
        'removable': value.removable,
        'repeatable': value.repeatable,
        'batchEditable': value.batchEditable,
    };
}


