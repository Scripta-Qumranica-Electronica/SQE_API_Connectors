/*
 * SQE API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UpdatedInterpretationRoiDTO struct for UpdatedInterpretationRoiDTO
type UpdatedInterpretationRoiDTO struct {
	OldInterpretationRoiId int32 `json:"oldInterpretationRoiId"`
	CreatorId int32 `json:"creatorId"`
	EditorId int32 `json:"editorId"`
	InterpretationRoiId int32 `json:"interpretationRoiId"`
	ArtefactId int32 `json:"artefactId"`
	SignInterpretationId int32 `json:"signInterpretationId"`
	Shape string `json:"shape"`
	Translate TranslateDTO `json:"translate"`
	StanceRotation *int32 `json:"stanceRotation,omitempty"`
	Exceptional bool `json:"exceptional"`
	ValuesSet bool `json:"valuesSet"`
}

// NewUpdatedInterpretationRoiDTO instantiates a new UpdatedInterpretationRoiDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatedInterpretationRoiDTO(oldInterpretationRoiId int32, creatorId int32, editorId int32, interpretationRoiId int32, artefactId int32, signInterpretationId int32, shape string, translate TranslateDTO, exceptional bool, valuesSet bool, ) *UpdatedInterpretationRoiDTO {
	this := UpdatedInterpretationRoiDTO{}
	this.OldInterpretationRoiId = oldInterpretationRoiId
	this.CreatorId = creatorId
	this.EditorId = editorId
	this.InterpretationRoiId = interpretationRoiId
	this.ArtefactId = artefactId
	this.SignInterpretationId = signInterpretationId
	this.Shape = shape
	this.Translate = translate
	this.Exceptional = exceptional
	this.ValuesSet = valuesSet
	return &this
}

// NewUpdatedInterpretationRoiDTOWithDefaults instantiates a new UpdatedInterpretationRoiDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatedInterpretationRoiDTOWithDefaults() *UpdatedInterpretationRoiDTO {
	this := UpdatedInterpretationRoiDTO{}
	return &this
}

// GetOldInterpretationRoiId returns the OldInterpretationRoiId field value
func (o *UpdatedInterpretationRoiDTO) GetOldInterpretationRoiId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.OldInterpretationRoiId
}

// GetOldInterpretationRoiIdOk returns a tuple with the OldInterpretationRoiId field value
// and a boolean to check if the value has been set.
func (o *UpdatedInterpretationRoiDTO) GetOldInterpretationRoiIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OldInterpretationRoiId, true
}

// SetOldInterpretationRoiId sets field value
func (o *UpdatedInterpretationRoiDTO) SetOldInterpretationRoiId(v int32) {
	o.OldInterpretationRoiId = v
}

// GetCreatorId returns the CreatorId field value
func (o *UpdatedInterpretationRoiDTO) GetCreatorId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value
// and a boolean to check if the value has been set.
func (o *UpdatedInterpretationRoiDTO) GetCreatorIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CreatorId, true
}

// SetCreatorId sets field value
func (o *UpdatedInterpretationRoiDTO) SetCreatorId(v int32) {
	o.CreatorId = v
}

// GetEditorId returns the EditorId field value
func (o *UpdatedInterpretationRoiDTO) GetEditorId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.EditorId
}

// GetEditorIdOk returns a tuple with the EditorId field value
// and a boolean to check if the value has been set.
func (o *UpdatedInterpretationRoiDTO) GetEditorIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EditorId, true
}

// SetEditorId sets field value
func (o *UpdatedInterpretationRoiDTO) SetEditorId(v int32) {
	o.EditorId = v
}

// GetInterpretationRoiId returns the InterpretationRoiId field value
func (o *UpdatedInterpretationRoiDTO) GetInterpretationRoiId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.InterpretationRoiId
}

// GetInterpretationRoiIdOk returns a tuple with the InterpretationRoiId field value
// and a boolean to check if the value has been set.
func (o *UpdatedInterpretationRoiDTO) GetInterpretationRoiIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.InterpretationRoiId, true
}

// SetInterpretationRoiId sets field value
func (o *UpdatedInterpretationRoiDTO) SetInterpretationRoiId(v int32) {
	o.InterpretationRoiId = v
}

// GetArtefactId returns the ArtefactId field value
func (o *UpdatedInterpretationRoiDTO) GetArtefactId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.ArtefactId
}

// GetArtefactIdOk returns a tuple with the ArtefactId field value
// and a boolean to check if the value has been set.
func (o *UpdatedInterpretationRoiDTO) GetArtefactIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ArtefactId, true
}

// SetArtefactId sets field value
func (o *UpdatedInterpretationRoiDTO) SetArtefactId(v int32) {
	o.ArtefactId = v
}

// GetSignInterpretationId returns the SignInterpretationId field value
func (o *UpdatedInterpretationRoiDTO) GetSignInterpretationId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.SignInterpretationId
}

// GetSignInterpretationIdOk returns a tuple with the SignInterpretationId field value
// and a boolean to check if the value has been set.
func (o *UpdatedInterpretationRoiDTO) GetSignInterpretationIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SignInterpretationId, true
}

// SetSignInterpretationId sets field value
func (o *UpdatedInterpretationRoiDTO) SetSignInterpretationId(v int32) {
	o.SignInterpretationId = v
}

// GetShape returns the Shape field value
func (o *UpdatedInterpretationRoiDTO) GetShape() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Shape
}

// GetShapeOk returns a tuple with the Shape field value
// and a boolean to check if the value has been set.
func (o *UpdatedInterpretationRoiDTO) GetShapeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Shape, true
}

// SetShape sets field value
func (o *UpdatedInterpretationRoiDTO) SetShape(v string) {
	o.Shape = v
}

// GetTranslate returns the Translate field value
func (o *UpdatedInterpretationRoiDTO) GetTranslate() TranslateDTO {
	if o == nil  {
		var ret TranslateDTO
		return ret
	}

	return o.Translate
}

// GetTranslateOk returns a tuple with the Translate field value
// and a boolean to check if the value has been set.
func (o *UpdatedInterpretationRoiDTO) GetTranslateOk() (*TranslateDTO, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Translate, true
}

// SetTranslate sets field value
func (o *UpdatedInterpretationRoiDTO) SetTranslate(v TranslateDTO) {
	o.Translate = v
}

// GetStanceRotation returns the StanceRotation field value if set, zero value otherwise.
func (o *UpdatedInterpretationRoiDTO) GetStanceRotation() int32 {
	if o == nil || o.StanceRotation == nil {
		var ret int32
		return ret
	}
	return *o.StanceRotation
}

// GetStanceRotationOk returns a tuple with the StanceRotation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatedInterpretationRoiDTO) GetStanceRotationOk() (*int32, bool) {
	if o == nil || o.StanceRotation == nil {
		return nil, false
	}
	return o.StanceRotation, true
}

// HasStanceRotation returns a boolean if a field has been set.
func (o *UpdatedInterpretationRoiDTO) HasStanceRotation() bool {
	if o != nil && o.StanceRotation != nil {
		return true
	}

	return false
}

// SetStanceRotation gets a reference to the given int32 and assigns it to the StanceRotation field.
func (o *UpdatedInterpretationRoiDTO) SetStanceRotation(v int32) {
	o.StanceRotation = &v
}

// GetExceptional returns the Exceptional field value
func (o *UpdatedInterpretationRoiDTO) GetExceptional() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.Exceptional
}

// GetExceptionalOk returns a tuple with the Exceptional field value
// and a boolean to check if the value has been set.
func (o *UpdatedInterpretationRoiDTO) GetExceptionalOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Exceptional, true
}

// SetExceptional sets field value
func (o *UpdatedInterpretationRoiDTO) SetExceptional(v bool) {
	o.Exceptional = v
}

// GetValuesSet returns the ValuesSet field value
func (o *UpdatedInterpretationRoiDTO) GetValuesSet() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.ValuesSet
}

// GetValuesSetOk returns a tuple with the ValuesSet field value
// and a boolean to check if the value has been set.
func (o *UpdatedInterpretationRoiDTO) GetValuesSetOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ValuesSet, true
}

// SetValuesSet sets field value
func (o *UpdatedInterpretationRoiDTO) SetValuesSet(v bool) {
	o.ValuesSet = v
}

func (o UpdatedInterpretationRoiDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["oldInterpretationRoiId"] = o.OldInterpretationRoiId
	}
	if true {
		toSerialize["creatorId"] = o.CreatorId
	}
	if true {
		toSerialize["editorId"] = o.EditorId
	}
	if true {
		toSerialize["interpretationRoiId"] = o.InterpretationRoiId
	}
	if true {
		toSerialize["artefactId"] = o.ArtefactId
	}
	if true {
		toSerialize["signInterpretationId"] = o.SignInterpretationId
	}
	if true {
		toSerialize["shape"] = o.Shape
	}
	if true {
		toSerialize["translate"] = o.Translate
	}
	if o.StanceRotation != nil {
		toSerialize["stanceRotation"] = o.StanceRotation
	}
	if true {
		toSerialize["exceptional"] = o.Exceptional
	}
	if true {
		toSerialize["valuesSet"] = o.ValuesSet
	}
	return json.Marshal(toSerialize)
}

type NullableUpdatedInterpretationRoiDTO struct {
	value *UpdatedInterpretationRoiDTO
	isSet bool
}

func (v NullableUpdatedInterpretationRoiDTO) Get() *UpdatedInterpretationRoiDTO {
	return v.value
}

func (v *NullableUpdatedInterpretationRoiDTO) Set(val *UpdatedInterpretationRoiDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatedInterpretationRoiDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatedInterpretationRoiDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatedInterpretationRoiDTO(val *UpdatedInterpretationRoiDTO) *NullableUpdatedInterpretationRoiDTO {
	return &NullableUpdatedInterpretationRoiDTO{value: val, isSet: true}
}

func (v NullableUpdatedInterpretationRoiDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatedInterpretationRoiDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


