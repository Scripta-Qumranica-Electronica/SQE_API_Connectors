/*
 * SQE API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SimpleImageDTO struct for SimpleImageDTO
type SimpleImageDTO struct {
	Id int32 `json:"id"`
	Url string `json:"url"`
	LightingType Lighting `json:"lightingType"`
	LightingDirection Direction `json:"lightingDirection"`
	WaveLength []string `json:"waveLength"`
	Type string `json:"type"`
	Side SideDesignation `json:"side"`
	Ppi int32 `json:"ppi"`
	Master bool `json:"master"`
	CatalogNumber int32 `json:"catalogNumber"`
}

// NewSimpleImageDTO instantiates a new SimpleImageDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSimpleImageDTO(id int32, url string, lightingType Lighting, lightingDirection Direction, waveLength []string, type_ string, side SideDesignation, ppi int32, master bool, catalogNumber int32, ) *SimpleImageDTO {
	this := SimpleImageDTO{}
	this.Id = id
	this.Url = url
	this.LightingType = lightingType
	this.LightingDirection = lightingDirection
	this.WaveLength = waveLength
	this.Type = type_
	this.Side = side
	this.Ppi = ppi
	this.Master = master
	this.CatalogNumber = catalogNumber
	return &this
}

// NewSimpleImageDTOWithDefaults instantiates a new SimpleImageDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSimpleImageDTOWithDefaults() *SimpleImageDTO {
	this := SimpleImageDTO{}
	return &this
}

// GetId returns the Id field value
func (o *SimpleImageDTO) GetId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SimpleImageDTO) GetIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SimpleImageDTO) SetId(v int32) {
	o.Id = v
}

// GetUrl returns the Url field value
func (o *SimpleImageDTO) GetUrl() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *SimpleImageDTO) GetUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *SimpleImageDTO) SetUrl(v string) {
	o.Url = v
}

// GetLightingType returns the LightingType field value
func (o *SimpleImageDTO) GetLightingType() Lighting {
	if o == nil  {
		var ret Lighting
		return ret
	}

	return o.LightingType
}

// GetLightingTypeOk returns a tuple with the LightingType field value
// and a boolean to check if the value has been set.
func (o *SimpleImageDTO) GetLightingTypeOk() (*Lighting, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LightingType, true
}

// SetLightingType sets field value
func (o *SimpleImageDTO) SetLightingType(v Lighting) {
	o.LightingType = v
}

// GetLightingDirection returns the LightingDirection field value
func (o *SimpleImageDTO) GetLightingDirection() Direction {
	if o == nil  {
		var ret Direction
		return ret
	}

	return o.LightingDirection
}

// GetLightingDirectionOk returns a tuple with the LightingDirection field value
// and a boolean to check if the value has been set.
func (o *SimpleImageDTO) GetLightingDirectionOk() (*Direction, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LightingDirection, true
}

// SetLightingDirection sets field value
func (o *SimpleImageDTO) SetLightingDirection(v Direction) {
	o.LightingDirection = v
}

// GetWaveLength returns the WaveLength field value
func (o *SimpleImageDTO) GetWaveLength() []string {
	if o == nil  {
		var ret []string
		return ret
	}

	return o.WaveLength
}

// GetWaveLengthOk returns a tuple with the WaveLength field value
// and a boolean to check if the value has been set.
func (o *SimpleImageDTO) GetWaveLengthOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.WaveLength, true
}

// SetWaveLength sets field value
func (o *SimpleImageDTO) SetWaveLength(v []string) {
	o.WaveLength = v
}

// GetType returns the Type field value
func (o *SimpleImageDTO) GetType() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *SimpleImageDTO) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *SimpleImageDTO) SetType(v string) {
	o.Type = v
}

// GetSide returns the Side field value
func (o *SimpleImageDTO) GetSide() SideDesignation {
	if o == nil  {
		var ret SideDesignation
		return ret
	}

	return o.Side
}

// GetSideOk returns a tuple with the Side field value
// and a boolean to check if the value has been set.
func (o *SimpleImageDTO) GetSideOk() (*SideDesignation, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Side, true
}

// SetSide sets field value
func (o *SimpleImageDTO) SetSide(v SideDesignation) {
	o.Side = v
}

// GetPpi returns the Ppi field value
func (o *SimpleImageDTO) GetPpi() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Ppi
}

// GetPpiOk returns a tuple with the Ppi field value
// and a boolean to check if the value has been set.
func (o *SimpleImageDTO) GetPpiOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Ppi, true
}

// SetPpi sets field value
func (o *SimpleImageDTO) SetPpi(v int32) {
	o.Ppi = v
}

// GetMaster returns the Master field value
func (o *SimpleImageDTO) GetMaster() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.Master
}

// GetMasterOk returns a tuple with the Master field value
// and a boolean to check if the value has been set.
func (o *SimpleImageDTO) GetMasterOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Master, true
}

// SetMaster sets field value
func (o *SimpleImageDTO) SetMaster(v bool) {
	o.Master = v
}

// GetCatalogNumber returns the CatalogNumber field value
func (o *SimpleImageDTO) GetCatalogNumber() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.CatalogNumber
}

// GetCatalogNumberOk returns a tuple with the CatalogNumber field value
// and a boolean to check if the value has been set.
func (o *SimpleImageDTO) GetCatalogNumberOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CatalogNumber, true
}

// SetCatalogNumber sets field value
func (o *SimpleImageDTO) SetCatalogNumber(v int32) {
	o.CatalogNumber = v
}

func (o SimpleImageDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["lightingType"] = o.LightingType
	}
	if true {
		toSerialize["lightingDirection"] = o.LightingDirection
	}
	if true {
		toSerialize["waveLength"] = o.WaveLength
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["side"] = o.Side
	}
	if true {
		toSerialize["ppi"] = o.Ppi
	}
	if true {
		toSerialize["master"] = o.Master
	}
	if true {
		toSerialize["catalogNumber"] = o.CatalogNumber
	}
	return json.Marshal(toSerialize)
}

type NullableSimpleImageDTO struct {
	value *SimpleImageDTO
	isSet bool
}

func (v NullableSimpleImageDTO) Get() *SimpleImageDTO {
	return v.value
}

func (v *NullableSimpleImageDTO) Set(val *SimpleImageDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableSimpleImageDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableSimpleImageDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSimpleImageDTO(val *SimpleImageDTO) *NullableSimpleImageDTO {
	return &NullableSimpleImageDTO{value: val, isSet: true}
}

func (v NullableSimpleImageDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSimpleImageDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


