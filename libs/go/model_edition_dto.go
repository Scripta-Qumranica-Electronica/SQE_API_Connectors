/*
 * SQE API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// EditionDTO struct for EditionDTO
type EditionDTO struct {
	Id int32 `json:"id"`
	Name string `json:"name"`
	EditionDataEditorId int32 `json:"editionDataEditorId"`
	Permission PermissionDTO `json:"permission"`
	Owner UserDTO `json:"owner"`
	ThumbnailUrl NullableString `json:"thumbnailUrl,omitempty"`
	Shares []DetailedEditorRightsDTO `json:"shares"`
	Metrics EditionManuscriptMetricsDTO `json:"metrics"`
	Locked bool `json:"locked"`
	IsPublic bool `json:"isPublic"`
	LastEdit NullableTime `json:"lastEdit,omitempty"`
	Copyright string `json:"copyright"`
}

// NewEditionDTO instantiates a new EditionDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditionDTO(id int32, name string, editionDataEditorId int32, permission PermissionDTO, owner UserDTO, shares []DetailedEditorRightsDTO, metrics EditionManuscriptMetricsDTO, locked bool, isPublic bool, copyright string, ) *EditionDTO {
	this := EditionDTO{}
	this.Id = id
	this.Name = name
	this.EditionDataEditorId = editionDataEditorId
	this.Permission = permission
	this.Owner = owner
	this.Shares = shares
	this.Metrics = metrics
	this.Locked = locked
	this.IsPublic = isPublic
	this.Copyright = copyright
	return &this
}

// NewEditionDTOWithDefaults instantiates a new EditionDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditionDTOWithDefaults() *EditionDTO {
	this := EditionDTO{}
	return &this
}

// GetId returns the Id field value
func (o *EditionDTO) GetId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *EditionDTO) GetIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *EditionDTO) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *EditionDTO) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *EditionDTO) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *EditionDTO) SetName(v string) {
	o.Name = v
}

// GetEditionDataEditorId returns the EditionDataEditorId field value
func (o *EditionDTO) GetEditionDataEditorId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.EditionDataEditorId
}

// GetEditionDataEditorIdOk returns a tuple with the EditionDataEditorId field value
// and a boolean to check if the value has been set.
func (o *EditionDTO) GetEditionDataEditorIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EditionDataEditorId, true
}

// SetEditionDataEditorId sets field value
func (o *EditionDTO) SetEditionDataEditorId(v int32) {
	o.EditionDataEditorId = v
}

// GetPermission returns the Permission field value
func (o *EditionDTO) GetPermission() PermissionDTO {
	if o == nil  {
		var ret PermissionDTO
		return ret
	}

	return o.Permission
}

// GetPermissionOk returns a tuple with the Permission field value
// and a boolean to check if the value has been set.
func (o *EditionDTO) GetPermissionOk() (*PermissionDTO, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Permission, true
}

// SetPermission sets field value
func (o *EditionDTO) SetPermission(v PermissionDTO) {
	o.Permission = v
}

// GetOwner returns the Owner field value
func (o *EditionDTO) GetOwner() UserDTO {
	if o == nil  {
		var ret UserDTO
		return ret
	}

	return o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value
// and a boolean to check if the value has been set.
func (o *EditionDTO) GetOwnerOk() (*UserDTO, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Owner, true
}

// SetOwner sets field value
func (o *EditionDTO) SetOwner(v UserDTO) {
	o.Owner = v
}

// GetThumbnailUrl returns the ThumbnailUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditionDTO) GetThumbnailUrl() string {
	if o == nil || o.ThumbnailUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.ThumbnailUrl.Get()
}

// GetThumbnailUrlOk returns a tuple with the ThumbnailUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditionDTO) GetThumbnailUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ThumbnailUrl.Get(), o.ThumbnailUrl.IsSet()
}

// HasThumbnailUrl returns a boolean if a field has been set.
func (o *EditionDTO) HasThumbnailUrl() bool {
	if o != nil && o.ThumbnailUrl.IsSet() {
		return true
	}

	return false
}

// SetThumbnailUrl gets a reference to the given NullableString and assigns it to the ThumbnailUrl field.
func (o *EditionDTO) SetThumbnailUrl(v string) {
	o.ThumbnailUrl.Set(&v)
}
// SetThumbnailUrlNil sets the value for ThumbnailUrl to be an explicit nil
func (o *EditionDTO) SetThumbnailUrlNil() {
	o.ThumbnailUrl.Set(nil)
}

// UnsetThumbnailUrl ensures that no value is present for ThumbnailUrl, not even an explicit nil
func (o *EditionDTO) UnsetThumbnailUrl() {
	o.ThumbnailUrl.Unset()
}

// GetShares returns the Shares field value
func (o *EditionDTO) GetShares() []DetailedEditorRightsDTO {
	if o == nil  {
		var ret []DetailedEditorRightsDTO
		return ret
	}

	return o.Shares
}

// GetSharesOk returns a tuple with the Shares field value
// and a boolean to check if the value has been set.
func (o *EditionDTO) GetSharesOk() (*[]DetailedEditorRightsDTO, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Shares, true
}

// SetShares sets field value
func (o *EditionDTO) SetShares(v []DetailedEditorRightsDTO) {
	o.Shares = v
}

// GetMetrics returns the Metrics field value
func (o *EditionDTO) GetMetrics() EditionManuscriptMetricsDTO {
	if o == nil  {
		var ret EditionManuscriptMetricsDTO
		return ret
	}

	return o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value
// and a boolean to check if the value has been set.
func (o *EditionDTO) GetMetricsOk() (*EditionManuscriptMetricsDTO, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Metrics, true
}

// SetMetrics sets field value
func (o *EditionDTO) SetMetrics(v EditionManuscriptMetricsDTO) {
	o.Metrics = v
}

// GetLocked returns the Locked field value
func (o *EditionDTO) GetLocked() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.Locked
}

// GetLockedOk returns a tuple with the Locked field value
// and a boolean to check if the value has been set.
func (o *EditionDTO) GetLockedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Locked, true
}

// SetLocked sets field value
func (o *EditionDTO) SetLocked(v bool) {
	o.Locked = v
}

// GetIsPublic returns the IsPublic field value
func (o *EditionDTO) GetIsPublic() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.IsPublic
}

// GetIsPublicOk returns a tuple with the IsPublic field value
// and a boolean to check if the value has been set.
func (o *EditionDTO) GetIsPublicOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IsPublic, true
}

// SetIsPublic sets field value
func (o *EditionDTO) SetIsPublic(v bool) {
	o.IsPublic = v
}

// GetLastEdit returns the LastEdit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditionDTO) GetLastEdit() time.Time {
	if o == nil || o.LastEdit.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.LastEdit.Get()
}

// GetLastEditOk returns a tuple with the LastEdit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditionDTO) GetLastEditOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastEdit.Get(), o.LastEdit.IsSet()
}

// HasLastEdit returns a boolean if a field has been set.
func (o *EditionDTO) HasLastEdit() bool {
	if o != nil && o.LastEdit.IsSet() {
		return true
	}

	return false
}

// SetLastEdit gets a reference to the given NullableTime and assigns it to the LastEdit field.
func (o *EditionDTO) SetLastEdit(v time.Time) {
	o.LastEdit.Set(&v)
}
// SetLastEditNil sets the value for LastEdit to be an explicit nil
func (o *EditionDTO) SetLastEditNil() {
	o.LastEdit.Set(nil)
}

// UnsetLastEdit ensures that no value is present for LastEdit, not even an explicit nil
func (o *EditionDTO) UnsetLastEdit() {
	o.LastEdit.Unset()
}

// GetCopyright returns the Copyright field value
func (o *EditionDTO) GetCopyright() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Copyright
}

// GetCopyrightOk returns a tuple with the Copyright field value
// and a boolean to check if the value has been set.
func (o *EditionDTO) GetCopyrightOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Copyright, true
}

// SetCopyright sets field value
func (o *EditionDTO) SetCopyright(v string) {
	o.Copyright = v
}

func (o EditionDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["editionDataEditorId"] = o.EditionDataEditorId
	}
	if true {
		toSerialize["permission"] = o.Permission
	}
	if true {
		toSerialize["owner"] = o.Owner
	}
	if o.ThumbnailUrl.IsSet() {
		toSerialize["thumbnailUrl"] = o.ThumbnailUrl.Get()
	}
	if true {
		toSerialize["shares"] = o.Shares
	}
	if true {
		toSerialize["metrics"] = o.Metrics
	}
	if true {
		toSerialize["locked"] = o.Locked
	}
	if true {
		toSerialize["isPublic"] = o.IsPublic
	}
	if o.LastEdit.IsSet() {
		toSerialize["lastEdit"] = o.LastEdit.Get()
	}
	if true {
		toSerialize["copyright"] = o.Copyright
	}
	return json.Marshal(toSerialize)
}

type NullableEditionDTO struct {
	value *EditionDTO
	isSet bool
}

func (v NullableEditionDTO) Get() *EditionDTO {
	return v.value
}

func (v *NullableEditionDTO) Set(val *EditionDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableEditionDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableEditionDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditionDTO(val *EditionDTO) *NullableEditionDTO {
	return &NullableEditionDTO{value: val, isSet: true}
}

func (v NullableEditionDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditionDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


