/*
 * SQE API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EditorInvitationListDTO struct for EditorInvitationListDTO
type EditorInvitationListDTO struct {
	EditorInvitations []EditorInvitationDTO `json:"editorInvitations"`
}

// NewEditorInvitationListDTO instantiates a new EditorInvitationListDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditorInvitationListDTO(editorInvitations []EditorInvitationDTO, ) *EditorInvitationListDTO {
	this := EditorInvitationListDTO{}
	this.EditorInvitations = editorInvitations
	return &this
}

// NewEditorInvitationListDTOWithDefaults instantiates a new EditorInvitationListDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditorInvitationListDTOWithDefaults() *EditorInvitationListDTO {
	this := EditorInvitationListDTO{}
	return &this
}

// GetEditorInvitations returns the EditorInvitations field value
func (o *EditorInvitationListDTO) GetEditorInvitations() []EditorInvitationDTO {
	if o == nil  {
		var ret []EditorInvitationDTO
		return ret
	}

	return o.EditorInvitations
}

// GetEditorInvitationsOk returns a tuple with the EditorInvitations field value
// and a boolean to check if the value has been set.
func (o *EditorInvitationListDTO) GetEditorInvitationsOk() (*[]EditorInvitationDTO, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EditorInvitations, true
}

// SetEditorInvitations sets field value
func (o *EditorInvitationListDTO) SetEditorInvitations(v []EditorInvitationDTO) {
	o.EditorInvitations = v
}

func (o EditorInvitationListDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["editorInvitations"] = o.EditorInvitations
	}
	return json.Marshal(toSerialize)
}

type NullableEditorInvitationListDTO struct {
	value *EditorInvitationListDTO
	isSet bool
}

func (v NullableEditorInvitationListDTO) Get() *EditorInvitationListDTO {
	return v.value
}

func (v *NullableEditorInvitationListDTO) Set(val *EditorInvitationListDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableEditorInvitationListDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableEditorInvitationListDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditorInvitationListDTO(val *EditorInvitationListDTO) *NullableEditorInvitationListDTO {
	return &NullableEditorInvitationListDTO{value: val, isSet: true}
}

func (v NullableEditorInvitationListDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditorInvitationListDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


