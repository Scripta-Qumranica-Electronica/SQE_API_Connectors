/*
 * SQE API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// EditorInvitationDTO struct for EditorInvitationDTO
type EditorInvitationDTO struct {
	Token string `json:"token"`
	RequestingAdminName string `json:"requestingAdminName"`
	RequestingAdminEmail string `json:"requestingAdminEmail"`
	EditionId int32 `json:"editionId"`
	EditionName string `json:"editionName"`
	Date time.Time `json:"date"`
	MayLock bool `json:"mayLock"`
	MayRead bool `json:"mayRead"`
	MayWrite bool `json:"mayWrite"`
	IsAdmin bool `json:"isAdmin"`
}

// NewEditorInvitationDTO instantiates a new EditorInvitationDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditorInvitationDTO(token string, requestingAdminName string, requestingAdminEmail string, editionId int32, editionName string, date time.Time, mayLock bool, mayRead bool, mayWrite bool, isAdmin bool, ) *EditorInvitationDTO {
	this := EditorInvitationDTO{}
	this.Token = token
	this.RequestingAdminName = requestingAdminName
	this.RequestingAdminEmail = requestingAdminEmail
	this.EditionId = editionId
	this.EditionName = editionName
	this.Date = date
	this.MayLock = mayLock
	this.MayRead = mayRead
	this.MayWrite = mayWrite
	this.IsAdmin = isAdmin
	return &this
}

// NewEditorInvitationDTOWithDefaults instantiates a new EditorInvitationDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditorInvitationDTOWithDefaults() *EditorInvitationDTO {
	this := EditorInvitationDTO{}
	return &this
}

// GetToken returns the Token field value
func (o *EditorInvitationDTO) GetToken() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *EditorInvitationDTO) GetTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *EditorInvitationDTO) SetToken(v string) {
	o.Token = v
}

// GetRequestingAdminName returns the RequestingAdminName field value
func (o *EditorInvitationDTO) GetRequestingAdminName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.RequestingAdminName
}

// GetRequestingAdminNameOk returns a tuple with the RequestingAdminName field value
// and a boolean to check if the value has been set.
func (o *EditorInvitationDTO) GetRequestingAdminNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RequestingAdminName, true
}

// SetRequestingAdminName sets field value
func (o *EditorInvitationDTO) SetRequestingAdminName(v string) {
	o.RequestingAdminName = v
}

// GetRequestingAdminEmail returns the RequestingAdminEmail field value
func (o *EditorInvitationDTO) GetRequestingAdminEmail() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.RequestingAdminEmail
}

// GetRequestingAdminEmailOk returns a tuple with the RequestingAdminEmail field value
// and a boolean to check if the value has been set.
func (o *EditorInvitationDTO) GetRequestingAdminEmailOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RequestingAdminEmail, true
}

// SetRequestingAdminEmail sets field value
func (o *EditorInvitationDTO) SetRequestingAdminEmail(v string) {
	o.RequestingAdminEmail = v
}

// GetEditionId returns the EditionId field value
func (o *EditorInvitationDTO) GetEditionId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.EditionId
}

// GetEditionIdOk returns a tuple with the EditionId field value
// and a boolean to check if the value has been set.
func (o *EditorInvitationDTO) GetEditionIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EditionId, true
}

// SetEditionId sets field value
func (o *EditorInvitationDTO) SetEditionId(v int32) {
	o.EditionId = v
}

// GetEditionName returns the EditionName field value
func (o *EditorInvitationDTO) GetEditionName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.EditionName
}

// GetEditionNameOk returns a tuple with the EditionName field value
// and a boolean to check if the value has been set.
func (o *EditorInvitationDTO) GetEditionNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EditionName, true
}

// SetEditionName sets field value
func (o *EditorInvitationDTO) SetEditionName(v string) {
	o.EditionName = v
}

// GetDate returns the Date field value
func (o *EditorInvitationDTO) GetDate() time.Time {
	if o == nil  {
		var ret time.Time
		return ret
	}

	return o.Date
}

// GetDateOk returns a tuple with the Date field value
// and a boolean to check if the value has been set.
func (o *EditorInvitationDTO) GetDateOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Date, true
}

// SetDate sets field value
func (o *EditorInvitationDTO) SetDate(v time.Time) {
	o.Date = v
}

// GetMayLock returns the MayLock field value
func (o *EditorInvitationDTO) GetMayLock() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.MayLock
}

// GetMayLockOk returns a tuple with the MayLock field value
// and a boolean to check if the value has been set.
func (o *EditorInvitationDTO) GetMayLockOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MayLock, true
}

// SetMayLock sets field value
func (o *EditorInvitationDTO) SetMayLock(v bool) {
	o.MayLock = v
}

// GetMayRead returns the MayRead field value
func (o *EditorInvitationDTO) GetMayRead() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.MayRead
}

// GetMayReadOk returns a tuple with the MayRead field value
// and a boolean to check if the value has been set.
func (o *EditorInvitationDTO) GetMayReadOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MayRead, true
}

// SetMayRead sets field value
func (o *EditorInvitationDTO) SetMayRead(v bool) {
	o.MayRead = v
}

// GetMayWrite returns the MayWrite field value
func (o *EditorInvitationDTO) GetMayWrite() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.MayWrite
}

// GetMayWriteOk returns a tuple with the MayWrite field value
// and a boolean to check if the value has been set.
func (o *EditorInvitationDTO) GetMayWriteOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MayWrite, true
}

// SetMayWrite sets field value
func (o *EditorInvitationDTO) SetMayWrite(v bool) {
	o.MayWrite = v
}

// GetIsAdmin returns the IsAdmin field value
func (o *EditorInvitationDTO) GetIsAdmin() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.IsAdmin
}

// GetIsAdminOk returns a tuple with the IsAdmin field value
// and a boolean to check if the value has been set.
func (o *EditorInvitationDTO) GetIsAdminOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IsAdmin, true
}

// SetIsAdmin sets field value
func (o *EditorInvitationDTO) SetIsAdmin(v bool) {
	o.IsAdmin = v
}

func (o EditorInvitationDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["token"] = o.Token
	}
	if true {
		toSerialize["requestingAdminName"] = o.RequestingAdminName
	}
	if true {
		toSerialize["requestingAdminEmail"] = o.RequestingAdminEmail
	}
	if true {
		toSerialize["editionId"] = o.EditionId
	}
	if true {
		toSerialize["editionName"] = o.EditionName
	}
	if true {
		toSerialize["date"] = o.Date
	}
	if true {
		toSerialize["mayLock"] = o.MayLock
	}
	if true {
		toSerialize["mayRead"] = o.MayRead
	}
	if true {
		toSerialize["mayWrite"] = o.MayWrite
	}
	if true {
		toSerialize["isAdmin"] = o.IsAdmin
	}
	return json.Marshal(toSerialize)
}

type NullableEditorInvitationDTO struct {
	value *EditorInvitationDTO
	isSet bool
}

func (v NullableEditorInvitationDTO) Get() *EditorInvitationDTO {
	return v.value
}

func (v *NullableEditorInvitationDTO) Set(val *EditorInvitationDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableEditorInvitationDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableEditorInvitationDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditorInvitationDTO(val *EditorInvitationDTO) *NullableEditorInvitationDTO {
	return &NullableEditorInvitationDTO{value: val, isSet: true}
}

func (v NullableEditorInvitationDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditorInvitationDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


