/*
 * SQE API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ArtefactDTO struct for ArtefactDTO
type ArtefactDTO struct {
	EditionId int32 `json:"editionId"`
	ImagedObjectId string `json:"imagedObjectId"`
	ImageId int32 `json:"imageId"`
	ArtefactDataEditorId int32 `json:"artefactDataEditorId"`
	Mask string `json:"mask"`
	ArtefactMaskEditorId int32 `json:"artefactMaskEditorId"`
	IsPlaced bool `json:"isPlaced"`
	Placement PlacementDTO `json:"placement"`
	ArtefactPlacementEditorId NullableInt32 `json:"artefactPlacementEditorId,omitempty"`
	Side SideDesignation `json:"side"`
	StatusMessage NullableString `json:"statusMessage,omitempty"`
	Id int32 `json:"id"`
	Name string `json:"name"`
}

// NewArtefactDTO instantiates a new ArtefactDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArtefactDTO(editionId int32, imagedObjectId string, imageId int32, artefactDataEditorId int32, mask string, artefactMaskEditorId int32, isPlaced bool, placement PlacementDTO, side SideDesignation, id int32, name string, ) *ArtefactDTO {
	this := ArtefactDTO{}
	this.EditionId = editionId
	this.ImagedObjectId = imagedObjectId
	this.ImageId = imageId
	this.ArtefactDataEditorId = artefactDataEditorId
	this.Mask = mask
	this.ArtefactMaskEditorId = artefactMaskEditorId
	this.IsPlaced = isPlaced
	this.Placement = placement
	this.Side = side
	this.Id = id
	this.Name = name
	return &this
}

// NewArtefactDTOWithDefaults instantiates a new ArtefactDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArtefactDTOWithDefaults() *ArtefactDTO {
	this := ArtefactDTO{}
	return &this
}

// GetEditionId returns the EditionId field value
func (o *ArtefactDTO) GetEditionId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.EditionId
}

// GetEditionIdOk returns a tuple with the EditionId field value
// and a boolean to check if the value has been set.
func (o *ArtefactDTO) GetEditionIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EditionId, true
}

// SetEditionId sets field value
func (o *ArtefactDTO) SetEditionId(v int32) {
	o.EditionId = v
}

// GetImagedObjectId returns the ImagedObjectId field value
func (o *ArtefactDTO) GetImagedObjectId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ImagedObjectId
}

// GetImagedObjectIdOk returns a tuple with the ImagedObjectId field value
// and a boolean to check if the value has been set.
func (o *ArtefactDTO) GetImagedObjectIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ImagedObjectId, true
}

// SetImagedObjectId sets field value
func (o *ArtefactDTO) SetImagedObjectId(v string) {
	o.ImagedObjectId = v
}

// GetImageId returns the ImageId field value
func (o *ArtefactDTO) GetImageId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.ImageId
}

// GetImageIdOk returns a tuple with the ImageId field value
// and a boolean to check if the value has been set.
func (o *ArtefactDTO) GetImageIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ImageId, true
}

// SetImageId sets field value
func (o *ArtefactDTO) SetImageId(v int32) {
	o.ImageId = v
}

// GetArtefactDataEditorId returns the ArtefactDataEditorId field value
func (o *ArtefactDTO) GetArtefactDataEditorId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.ArtefactDataEditorId
}

// GetArtefactDataEditorIdOk returns a tuple with the ArtefactDataEditorId field value
// and a boolean to check if the value has been set.
func (o *ArtefactDTO) GetArtefactDataEditorIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ArtefactDataEditorId, true
}

// SetArtefactDataEditorId sets field value
func (o *ArtefactDTO) SetArtefactDataEditorId(v int32) {
	o.ArtefactDataEditorId = v
}

// GetMask returns the Mask field value
func (o *ArtefactDTO) GetMask() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Mask
}

// GetMaskOk returns a tuple with the Mask field value
// and a boolean to check if the value has been set.
func (o *ArtefactDTO) GetMaskOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Mask, true
}

// SetMask sets field value
func (o *ArtefactDTO) SetMask(v string) {
	o.Mask = v
}

// GetArtefactMaskEditorId returns the ArtefactMaskEditorId field value
func (o *ArtefactDTO) GetArtefactMaskEditorId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.ArtefactMaskEditorId
}

// GetArtefactMaskEditorIdOk returns a tuple with the ArtefactMaskEditorId field value
// and a boolean to check if the value has been set.
func (o *ArtefactDTO) GetArtefactMaskEditorIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ArtefactMaskEditorId, true
}

// SetArtefactMaskEditorId sets field value
func (o *ArtefactDTO) SetArtefactMaskEditorId(v int32) {
	o.ArtefactMaskEditorId = v
}

// GetIsPlaced returns the IsPlaced field value
func (o *ArtefactDTO) GetIsPlaced() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.IsPlaced
}

// GetIsPlacedOk returns a tuple with the IsPlaced field value
// and a boolean to check if the value has been set.
func (o *ArtefactDTO) GetIsPlacedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IsPlaced, true
}

// SetIsPlaced sets field value
func (o *ArtefactDTO) SetIsPlaced(v bool) {
	o.IsPlaced = v
}

// GetPlacement returns the Placement field value
func (o *ArtefactDTO) GetPlacement() PlacementDTO {
	if o == nil  {
		var ret PlacementDTO
		return ret
	}

	return o.Placement
}

// GetPlacementOk returns a tuple with the Placement field value
// and a boolean to check if the value has been set.
func (o *ArtefactDTO) GetPlacementOk() (*PlacementDTO, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Placement, true
}

// SetPlacement sets field value
func (o *ArtefactDTO) SetPlacement(v PlacementDTO) {
	o.Placement = v
}

// GetArtefactPlacementEditorId returns the ArtefactPlacementEditorId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArtefactDTO) GetArtefactPlacementEditorId() int32 {
	if o == nil || o.ArtefactPlacementEditorId.Get() == nil {
		var ret int32
		return ret
	}
	return *o.ArtefactPlacementEditorId.Get()
}

// GetArtefactPlacementEditorIdOk returns a tuple with the ArtefactPlacementEditorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArtefactDTO) GetArtefactPlacementEditorIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ArtefactPlacementEditorId.Get(), o.ArtefactPlacementEditorId.IsSet()
}

// HasArtefactPlacementEditorId returns a boolean if a field has been set.
func (o *ArtefactDTO) HasArtefactPlacementEditorId() bool {
	if o != nil && o.ArtefactPlacementEditorId.IsSet() {
		return true
	}

	return false
}

// SetArtefactPlacementEditorId gets a reference to the given NullableInt32 and assigns it to the ArtefactPlacementEditorId field.
func (o *ArtefactDTO) SetArtefactPlacementEditorId(v int32) {
	o.ArtefactPlacementEditorId.Set(&v)
}
// SetArtefactPlacementEditorIdNil sets the value for ArtefactPlacementEditorId to be an explicit nil
func (o *ArtefactDTO) SetArtefactPlacementEditorIdNil() {
	o.ArtefactPlacementEditorId.Set(nil)
}

// UnsetArtefactPlacementEditorId ensures that no value is present for ArtefactPlacementEditorId, not even an explicit nil
func (o *ArtefactDTO) UnsetArtefactPlacementEditorId() {
	o.ArtefactPlacementEditorId.Unset()
}

// GetSide returns the Side field value
func (o *ArtefactDTO) GetSide() SideDesignation {
	if o == nil  {
		var ret SideDesignation
		return ret
	}

	return o.Side
}

// GetSideOk returns a tuple with the Side field value
// and a boolean to check if the value has been set.
func (o *ArtefactDTO) GetSideOk() (*SideDesignation, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Side, true
}

// SetSide sets field value
func (o *ArtefactDTO) SetSide(v SideDesignation) {
	o.Side = v
}

// GetStatusMessage returns the StatusMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArtefactDTO) GetStatusMessage() string {
	if o == nil || o.StatusMessage.Get() == nil {
		var ret string
		return ret
	}
	return *o.StatusMessage.Get()
}

// GetStatusMessageOk returns a tuple with the StatusMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArtefactDTO) GetStatusMessageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StatusMessage.Get(), o.StatusMessage.IsSet()
}

// HasStatusMessage returns a boolean if a field has been set.
func (o *ArtefactDTO) HasStatusMessage() bool {
	if o != nil && o.StatusMessage.IsSet() {
		return true
	}

	return false
}

// SetStatusMessage gets a reference to the given NullableString and assigns it to the StatusMessage field.
func (o *ArtefactDTO) SetStatusMessage(v string) {
	o.StatusMessage.Set(&v)
}
// SetStatusMessageNil sets the value for StatusMessage to be an explicit nil
func (o *ArtefactDTO) SetStatusMessageNil() {
	o.StatusMessage.Set(nil)
}

// UnsetStatusMessage ensures that no value is present for StatusMessage, not even an explicit nil
func (o *ArtefactDTO) UnsetStatusMessage() {
	o.StatusMessage.Unset()
}

// GetId returns the Id field value
func (o *ArtefactDTO) GetId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ArtefactDTO) GetIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ArtefactDTO) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *ArtefactDTO) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ArtefactDTO) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ArtefactDTO) SetName(v string) {
	o.Name = v
}

func (o ArtefactDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["editionId"] = o.EditionId
	}
	if true {
		toSerialize["imagedObjectId"] = o.ImagedObjectId
	}
	if true {
		toSerialize["imageId"] = o.ImageId
	}
	if true {
		toSerialize["artefactDataEditorId"] = o.ArtefactDataEditorId
	}
	if true {
		toSerialize["mask"] = o.Mask
	}
	if true {
		toSerialize["artefactMaskEditorId"] = o.ArtefactMaskEditorId
	}
	if true {
		toSerialize["isPlaced"] = o.IsPlaced
	}
	if true {
		toSerialize["placement"] = o.Placement
	}
	if o.ArtefactPlacementEditorId.IsSet() {
		toSerialize["artefactPlacementEditorId"] = o.ArtefactPlacementEditorId.Get()
	}
	if true {
		toSerialize["side"] = o.Side
	}
	if o.StatusMessage.IsSet() {
		toSerialize["statusMessage"] = o.StatusMessage.Get()
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableArtefactDTO struct {
	value *ArtefactDTO
	isSet bool
}

func (v NullableArtefactDTO) Get() *ArtefactDTO {
	return v.value
}

func (v *NullableArtefactDTO) Set(val *ArtefactDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableArtefactDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableArtefactDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArtefactDTO(val *ArtefactDTO) *NullableArtefactDTO {
	return &NullableArtefactDTO{value: val, isSet: true}
}

func (v NullableArtefactDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArtefactDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


