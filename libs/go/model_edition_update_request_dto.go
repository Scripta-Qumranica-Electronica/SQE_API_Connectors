/*
 * SQE API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EditionUpdateRequestDTO struct for EditionUpdateRequestDTO
type EditionUpdateRequestDTO struct {
	Metrics NullableUpdateEditionManuscriptMetricsDTO `json:"metrics,omitempty"`
	Name NullableString `json:"name,omitempty"`
	CopyrightHolder NullableString `json:"copyrightHolder,omitempty"`
	Collaborators NullableString `json:"collaborators,omitempty"`
}

// NewEditionUpdateRequestDTO instantiates a new EditionUpdateRequestDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditionUpdateRequestDTO() *EditionUpdateRequestDTO {
	this := EditionUpdateRequestDTO{}
	return &this
}

// NewEditionUpdateRequestDTOWithDefaults instantiates a new EditionUpdateRequestDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditionUpdateRequestDTOWithDefaults() *EditionUpdateRequestDTO {
	this := EditionUpdateRequestDTO{}
	return &this
}

// GetMetrics returns the Metrics field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditionUpdateRequestDTO) GetMetrics() UpdateEditionManuscriptMetricsDTO {
	if o == nil || o.Metrics.Get() == nil {
		var ret UpdateEditionManuscriptMetricsDTO
		return ret
	}
	return *o.Metrics.Get()
}

// GetMetricsOk returns a tuple with the Metrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditionUpdateRequestDTO) GetMetricsOk() (*UpdateEditionManuscriptMetricsDTO, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Metrics.Get(), o.Metrics.IsSet()
}

// HasMetrics returns a boolean if a field has been set.
func (o *EditionUpdateRequestDTO) HasMetrics() bool {
	if o != nil && o.Metrics.IsSet() {
		return true
	}

	return false
}

// SetMetrics gets a reference to the given NullableUpdateEditionManuscriptMetricsDTO and assigns it to the Metrics field.
func (o *EditionUpdateRequestDTO) SetMetrics(v UpdateEditionManuscriptMetricsDTO) {
	o.Metrics.Set(&v)
}
// SetMetricsNil sets the value for Metrics to be an explicit nil
func (o *EditionUpdateRequestDTO) SetMetricsNil() {
	o.Metrics.Set(nil)
}

// UnsetMetrics ensures that no value is present for Metrics, not even an explicit nil
func (o *EditionUpdateRequestDTO) UnsetMetrics() {
	o.Metrics.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditionUpdateRequestDTO) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditionUpdateRequestDTO) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *EditionUpdateRequestDTO) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *EditionUpdateRequestDTO) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *EditionUpdateRequestDTO) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *EditionUpdateRequestDTO) UnsetName() {
	o.Name.Unset()
}

// GetCopyrightHolder returns the CopyrightHolder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditionUpdateRequestDTO) GetCopyrightHolder() string {
	if o == nil || o.CopyrightHolder.Get() == nil {
		var ret string
		return ret
	}
	return *o.CopyrightHolder.Get()
}

// GetCopyrightHolderOk returns a tuple with the CopyrightHolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditionUpdateRequestDTO) GetCopyrightHolderOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CopyrightHolder.Get(), o.CopyrightHolder.IsSet()
}

// HasCopyrightHolder returns a boolean if a field has been set.
func (o *EditionUpdateRequestDTO) HasCopyrightHolder() bool {
	if o != nil && o.CopyrightHolder.IsSet() {
		return true
	}

	return false
}

// SetCopyrightHolder gets a reference to the given NullableString and assigns it to the CopyrightHolder field.
func (o *EditionUpdateRequestDTO) SetCopyrightHolder(v string) {
	o.CopyrightHolder.Set(&v)
}
// SetCopyrightHolderNil sets the value for CopyrightHolder to be an explicit nil
func (o *EditionUpdateRequestDTO) SetCopyrightHolderNil() {
	o.CopyrightHolder.Set(nil)
}

// UnsetCopyrightHolder ensures that no value is present for CopyrightHolder, not even an explicit nil
func (o *EditionUpdateRequestDTO) UnsetCopyrightHolder() {
	o.CopyrightHolder.Unset()
}

// GetCollaborators returns the Collaborators field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditionUpdateRequestDTO) GetCollaborators() string {
	if o == nil || o.Collaborators.Get() == nil {
		var ret string
		return ret
	}
	return *o.Collaborators.Get()
}

// GetCollaboratorsOk returns a tuple with the Collaborators field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditionUpdateRequestDTO) GetCollaboratorsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Collaborators.Get(), o.Collaborators.IsSet()
}

// HasCollaborators returns a boolean if a field has been set.
func (o *EditionUpdateRequestDTO) HasCollaborators() bool {
	if o != nil && o.Collaborators.IsSet() {
		return true
	}

	return false
}

// SetCollaborators gets a reference to the given NullableString and assigns it to the Collaborators field.
func (o *EditionUpdateRequestDTO) SetCollaborators(v string) {
	o.Collaborators.Set(&v)
}
// SetCollaboratorsNil sets the value for Collaborators to be an explicit nil
func (o *EditionUpdateRequestDTO) SetCollaboratorsNil() {
	o.Collaborators.Set(nil)
}

// UnsetCollaborators ensures that no value is present for Collaborators, not even an explicit nil
func (o *EditionUpdateRequestDTO) UnsetCollaborators() {
	o.Collaborators.Unset()
}

func (o EditionUpdateRequestDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Metrics.IsSet() {
		toSerialize["metrics"] = o.Metrics.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.CopyrightHolder.IsSet() {
		toSerialize["copyrightHolder"] = o.CopyrightHolder.Get()
	}
	if o.Collaborators.IsSet() {
		toSerialize["collaborators"] = o.Collaborators.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableEditionUpdateRequestDTO struct {
	value *EditionUpdateRequestDTO
	isSet bool
}

func (v NullableEditionUpdateRequestDTO) Get() *EditionUpdateRequestDTO {
	return v.value
}

func (v *NullableEditionUpdateRequestDTO) Set(val *EditionUpdateRequestDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableEditionUpdateRequestDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableEditionUpdateRequestDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditionUpdateRequestDTO(val *EditionUpdateRequestDTO) *NullableEditionUpdateRequestDTO {
	return &NullableEditionUpdateRequestDTO{value: val, isSet: true}
}

func (v NullableEditionUpdateRequestDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditionUpdateRequestDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


