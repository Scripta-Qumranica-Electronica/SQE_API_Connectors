/*
 * SQE API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UpdateEditorRightsDTO struct for UpdateEditorRightsDTO
type UpdateEditorRightsDTO struct {
	MayLock bool `json:"mayLock"`
	MayRead bool `json:"mayRead"`
	MayWrite bool `json:"mayWrite"`
	IsAdmin bool `json:"isAdmin"`
}

// NewUpdateEditorRightsDTO instantiates a new UpdateEditorRightsDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateEditorRightsDTO(mayLock bool, mayRead bool, mayWrite bool, isAdmin bool, ) *UpdateEditorRightsDTO {
	this := UpdateEditorRightsDTO{}
	this.MayLock = mayLock
	this.MayRead = mayRead
	this.MayWrite = mayWrite
	this.IsAdmin = isAdmin
	return &this
}

// NewUpdateEditorRightsDTOWithDefaults instantiates a new UpdateEditorRightsDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateEditorRightsDTOWithDefaults() *UpdateEditorRightsDTO {
	this := UpdateEditorRightsDTO{}
	return &this
}

// GetMayLock returns the MayLock field value
func (o *UpdateEditorRightsDTO) GetMayLock() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.MayLock
}

// GetMayLockOk returns a tuple with the MayLock field value
// and a boolean to check if the value has been set.
func (o *UpdateEditorRightsDTO) GetMayLockOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MayLock, true
}

// SetMayLock sets field value
func (o *UpdateEditorRightsDTO) SetMayLock(v bool) {
	o.MayLock = v
}

// GetMayRead returns the MayRead field value
func (o *UpdateEditorRightsDTO) GetMayRead() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.MayRead
}

// GetMayReadOk returns a tuple with the MayRead field value
// and a boolean to check if the value has been set.
func (o *UpdateEditorRightsDTO) GetMayReadOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MayRead, true
}

// SetMayRead sets field value
func (o *UpdateEditorRightsDTO) SetMayRead(v bool) {
	o.MayRead = v
}

// GetMayWrite returns the MayWrite field value
func (o *UpdateEditorRightsDTO) GetMayWrite() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.MayWrite
}

// GetMayWriteOk returns a tuple with the MayWrite field value
// and a boolean to check if the value has been set.
func (o *UpdateEditorRightsDTO) GetMayWriteOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MayWrite, true
}

// SetMayWrite sets field value
func (o *UpdateEditorRightsDTO) SetMayWrite(v bool) {
	o.MayWrite = v
}

// GetIsAdmin returns the IsAdmin field value
func (o *UpdateEditorRightsDTO) GetIsAdmin() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.IsAdmin
}

// GetIsAdminOk returns a tuple with the IsAdmin field value
// and a boolean to check if the value has been set.
func (o *UpdateEditorRightsDTO) GetIsAdminOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IsAdmin, true
}

// SetIsAdmin sets field value
func (o *UpdateEditorRightsDTO) SetIsAdmin(v bool) {
	o.IsAdmin = v
}

func (o UpdateEditorRightsDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["mayLock"] = o.MayLock
	}
	if true {
		toSerialize["mayRead"] = o.MayRead
	}
	if true {
		toSerialize["mayWrite"] = o.MayWrite
	}
	if true {
		toSerialize["isAdmin"] = o.IsAdmin
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateEditorRightsDTO struct {
	value *UpdateEditorRightsDTO
	isSet bool
}

func (v NullableUpdateEditorRightsDTO) Get() *UpdateEditorRightsDTO {
	return v.value
}

func (v *NullableUpdateEditorRightsDTO) Set(val *UpdateEditorRightsDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateEditorRightsDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateEditorRightsDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateEditorRightsDTO(val *UpdateEditorRightsDTO) *NullableUpdateEditorRightsDTO {
	return &NullableUpdateEditorRightsDTO{value: val, isSet: true}
}

func (v NullableUpdateEditorRightsDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateEditorRightsDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


