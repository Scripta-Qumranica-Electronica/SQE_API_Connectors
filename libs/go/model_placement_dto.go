/*
 * SQE API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PlacementDTO struct for PlacementDTO
type PlacementDTO struct {
	Scale float64 `json:"scale"`
	Rotate float64 `json:"rotate"`
	ZIndex int32 `json:"zIndex"`
	Translate NullableTranslateDTO `json:"translate,omitempty"`
}

// NewPlacementDTO instantiates a new PlacementDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlacementDTO(scale float64, rotate float64, zIndex int32, ) *PlacementDTO {
	this := PlacementDTO{}
	this.Scale = scale
	this.Rotate = rotate
	this.ZIndex = zIndex
	return &this
}

// NewPlacementDTOWithDefaults instantiates a new PlacementDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlacementDTOWithDefaults() *PlacementDTO {
	this := PlacementDTO{}
	return &this
}

// GetScale returns the Scale field value
func (o *PlacementDTO) GetScale() float64 {
	if o == nil  {
		var ret float64
		return ret
	}

	return o.Scale
}

// GetScaleOk returns a tuple with the Scale field value
// and a boolean to check if the value has been set.
func (o *PlacementDTO) GetScaleOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Scale, true
}

// SetScale sets field value
func (o *PlacementDTO) SetScale(v float64) {
	o.Scale = v
}

// GetRotate returns the Rotate field value
func (o *PlacementDTO) GetRotate() float64 {
	if o == nil  {
		var ret float64
		return ret
	}

	return o.Rotate
}

// GetRotateOk returns a tuple with the Rotate field value
// and a boolean to check if the value has been set.
func (o *PlacementDTO) GetRotateOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Rotate, true
}

// SetRotate sets field value
func (o *PlacementDTO) SetRotate(v float64) {
	o.Rotate = v
}

// GetZIndex returns the ZIndex field value
func (o *PlacementDTO) GetZIndex() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.ZIndex
}

// GetZIndexOk returns a tuple with the ZIndex field value
// and a boolean to check if the value has been set.
func (o *PlacementDTO) GetZIndexOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ZIndex, true
}

// SetZIndex sets field value
func (o *PlacementDTO) SetZIndex(v int32) {
	o.ZIndex = v
}

// GetTranslate returns the Translate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PlacementDTO) GetTranslate() TranslateDTO {
	if o == nil || o.Translate.Get() == nil {
		var ret TranslateDTO
		return ret
	}
	return *o.Translate.Get()
}

// GetTranslateOk returns a tuple with the Translate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PlacementDTO) GetTranslateOk() (*TranslateDTO, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Translate.Get(), o.Translate.IsSet()
}

// HasTranslate returns a boolean if a field has been set.
func (o *PlacementDTO) HasTranslate() bool {
	if o != nil && o.Translate.IsSet() {
		return true
	}

	return false
}

// SetTranslate gets a reference to the given NullableTranslateDTO and assigns it to the Translate field.
func (o *PlacementDTO) SetTranslate(v TranslateDTO) {
	o.Translate.Set(&v)
}
// SetTranslateNil sets the value for Translate to be an explicit nil
func (o *PlacementDTO) SetTranslateNil() {
	o.Translate.Set(nil)
}

// UnsetTranslate ensures that no value is present for Translate, not even an explicit nil
func (o *PlacementDTO) UnsetTranslate() {
	o.Translate.Unset()
}

func (o PlacementDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["scale"] = o.Scale
	}
	if true {
		toSerialize["rotate"] = o.Rotate
	}
	if true {
		toSerialize["zIndex"] = o.ZIndex
	}
	if o.Translate.IsSet() {
		toSerialize["translate"] = o.Translate.Get()
	}
	return json.Marshal(toSerialize)
}

type NullablePlacementDTO struct {
	value *PlacementDTO
	isSet bool
}

func (v NullablePlacementDTO) Get() *PlacementDTO {
	return v.value
}

func (v *NullablePlacementDTO) Set(val *PlacementDTO) {
	v.value = val
	v.isSet = true
}

func (v NullablePlacementDTO) IsSet() bool {
	return v.isSet
}

func (v *NullablePlacementDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlacementDTO(val *PlacementDTO) *NullablePlacementDTO {
	return &NullablePlacementDTO{value: val, isSet: true}
}

func (v NullablePlacementDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlacementDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


