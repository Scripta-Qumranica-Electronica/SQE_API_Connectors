/*
 * SQE API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ImagedObjectListDTO struct for ImagedObjectListDTO
type ImagedObjectListDTO struct {
	ImagedObjects []ImagedObjectDTO `json:"imagedObjects"`
}

// NewImagedObjectListDTO instantiates a new ImagedObjectListDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImagedObjectListDTO(imagedObjects []ImagedObjectDTO, ) *ImagedObjectListDTO {
	this := ImagedObjectListDTO{}
	this.ImagedObjects = imagedObjects
	return &this
}

// NewImagedObjectListDTOWithDefaults instantiates a new ImagedObjectListDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImagedObjectListDTOWithDefaults() *ImagedObjectListDTO {
	this := ImagedObjectListDTO{}
	return &this
}

// GetImagedObjects returns the ImagedObjects field value
func (o *ImagedObjectListDTO) GetImagedObjects() []ImagedObjectDTO {
	if o == nil  {
		var ret []ImagedObjectDTO
		return ret
	}

	return o.ImagedObjects
}

// GetImagedObjectsOk returns a tuple with the ImagedObjects field value
// and a boolean to check if the value has been set.
func (o *ImagedObjectListDTO) GetImagedObjectsOk() (*[]ImagedObjectDTO, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ImagedObjects, true
}

// SetImagedObjects sets field value
func (o *ImagedObjectListDTO) SetImagedObjects(v []ImagedObjectDTO) {
	o.ImagedObjects = v
}

func (o ImagedObjectListDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["imagedObjects"] = o.ImagedObjects
	}
	return json.Marshal(toSerialize)
}

type NullableImagedObjectListDTO struct {
	value *ImagedObjectListDTO
	isSet bool
}

func (v NullableImagedObjectListDTO) Get() *ImagedObjectListDTO {
	return v.value
}

func (v *NullableImagedObjectListDTO) Set(val *ImagedObjectListDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableImagedObjectListDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableImagedObjectListDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImagedObjectListDTO(val *ImagedObjectListDTO) *NullableImagedObjectListDTO {
	return &NullableImagedObjectListDTO{value: val, isSet: true}
}

func (v NullableImagedObjectListDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImagedObjectListDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


