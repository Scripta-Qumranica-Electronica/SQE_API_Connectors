/*
 * SQE API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CommentaryDTO struct for CommentaryDTO
type CommentaryDTO struct {
	CreatorId int32 `json:"creatorId"`
	EditorId int32 `json:"editorId"`
	Commentary NullableString `json:"commentary,omitempty"`
}

// NewCommentaryDTO instantiates a new CommentaryDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommentaryDTO(creatorId int32, editorId int32, ) *CommentaryDTO {
	this := CommentaryDTO{}
	this.CreatorId = creatorId
	this.EditorId = editorId
	return &this
}

// NewCommentaryDTOWithDefaults instantiates a new CommentaryDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommentaryDTOWithDefaults() *CommentaryDTO {
	this := CommentaryDTO{}
	return &this
}

// GetCreatorId returns the CreatorId field value
func (o *CommentaryDTO) GetCreatorId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value
// and a boolean to check if the value has been set.
func (o *CommentaryDTO) GetCreatorIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CreatorId, true
}

// SetCreatorId sets field value
func (o *CommentaryDTO) SetCreatorId(v int32) {
	o.CreatorId = v
}

// GetEditorId returns the EditorId field value
func (o *CommentaryDTO) GetEditorId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.EditorId
}

// GetEditorIdOk returns a tuple with the EditorId field value
// and a boolean to check if the value has been set.
func (o *CommentaryDTO) GetEditorIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EditorId, true
}

// SetEditorId sets field value
func (o *CommentaryDTO) SetEditorId(v int32) {
	o.EditorId = v
}

// GetCommentary returns the Commentary field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommentaryDTO) GetCommentary() string {
	if o == nil || o.Commentary.Get() == nil {
		var ret string
		return ret
	}
	return *o.Commentary.Get()
}

// GetCommentaryOk returns a tuple with the Commentary field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommentaryDTO) GetCommentaryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Commentary.Get(), o.Commentary.IsSet()
}

// HasCommentary returns a boolean if a field has been set.
func (o *CommentaryDTO) HasCommentary() bool {
	if o != nil && o.Commentary.IsSet() {
		return true
	}

	return false
}

// SetCommentary gets a reference to the given NullableString and assigns it to the Commentary field.
func (o *CommentaryDTO) SetCommentary(v string) {
	o.Commentary.Set(&v)
}
// SetCommentaryNil sets the value for Commentary to be an explicit nil
func (o *CommentaryDTO) SetCommentaryNil() {
	o.Commentary.Set(nil)
}

// UnsetCommentary ensures that no value is present for Commentary, not even an explicit nil
func (o *CommentaryDTO) UnsetCommentary() {
	o.Commentary.Unset()
}

func (o CommentaryDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["creatorId"] = o.CreatorId
	}
	if true {
		toSerialize["editorId"] = o.EditorId
	}
	if o.Commentary.IsSet() {
		toSerialize["commentary"] = o.Commentary.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCommentaryDTO struct {
	value *CommentaryDTO
	isSet bool
}

func (v NullableCommentaryDTO) Get() *CommentaryDTO {
	return v.value
}

func (v *NullableCommentaryDTO) Set(val *CommentaryDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableCommentaryDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableCommentaryDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommentaryDTO(val *CommentaryDTO) *NullableCommentaryDTO {
	return &NullableCommentaryDTO{value: val, isSet: true}
}

func (v NullableCommentaryDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommentaryDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


