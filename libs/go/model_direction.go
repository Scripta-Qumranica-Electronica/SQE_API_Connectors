/*
 * SQE API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// Direction the model 'Direction'
type Direction int32

// List of Direction
const (
	_0 Direction = 0
	_1 Direction = 1
	_2 Direction = 2
)

func (v *Direction) UnmarshalJSON(src []byte) error {
	var value int32
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := Direction(value)
	for _, existing := range []Direction{ 0, 1, 2,   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid Direction", value)
}

// Ptr returns reference to Direction value
func (v Direction) Ptr() *Direction {
	return &v
}

type NullableDirection struct {
	value *Direction
	isSet bool
}

func (v NullableDirection) Get() *Direction {
	return v.value
}

func (v *NullableDirection) Set(val *Direction) {
	v.value = val
	v.isSet = true
}

func (v NullableDirection) IsSet() bool {
	return v.isSet
}

func (v *NullableDirection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDirection(val *Direction) *NullableDirection {
	return &NullableDirection{value: val, isSet: true}
}

func (v NullableDirection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDirection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

