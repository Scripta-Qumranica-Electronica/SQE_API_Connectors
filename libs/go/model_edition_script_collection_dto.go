/*
 * SQE API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EditionScriptCollectionDTO struct for EditionScriptCollectionDTO
type EditionScriptCollectionDTO struct {
	Letters []CharacterShapeDTO `json:"letters"`
}

// NewEditionScriptCollectionDTO instantiates a new EditionScriptCollectionDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditionScriptCollectionDTO(letters []CharacterShapeDTO, ) *EditionScriptCollectionDTO {
	this := EditionScriptCollectionDTO{}
	this.Letters = letters
	return &this
}

// NewEditionScriptCollectionDTOWithDefaults instantiates a new EditionScriptCollectionDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditionScriptCollectionDTOWithDefaults() *EditionScriptCollectionDTO {
	this := EditionScriptCollectionDTO{}
	return &this
}

// GetLetters returns the Letters field value
func (o *EditionScriptCollectionDTO) GetLetters() []CharacterShapeDTO {
	if o == nil  {
		var ret []CharacterShapeDTO
		return ret
	}

	return o.Letters
}

// GetLettersOk returns a tuple with the Letters field value
// and a boolean to check if the value has been set.
func (o *EditionScriptCollectionDTO) GetLettersOk() (*[]CharacterShapeDTO, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Letters, true
}

// SetLetters sets field value
func (o *EditionScriptCollectionDTO) SetLetters(v []CharacterShapeDTO) {
	o.Letters = v
}

func (o EditionScriptCollectionDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["letters"] = o.Letters
	}
	return json.Marshal(toSerialize)
}

type NullableEditionScriptCollectionDTO struct {
	value *EditionScriptCollectionDTO
	isSet bool
}

func (v NullableEditionScriptCollectionDTO) Get() *EditionScriptCollectionDTO {
	return v.value
}

func (v *NullableEditionScriptCollectionDTO) Set(val *EditionScriptCollectionDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableEditionScriptCollectionDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableEditionScriptCollectionDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditionScriptCollectionDTO(val *EditionScriptCollectionDTO) *NullableEditionScriptCollectionDTO {
	return &NullableEditionScriptCollectionDTO{value: val, isSet: true}
}

func (v NullableEditionScriptCollectionDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditionScriptCollectionDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


