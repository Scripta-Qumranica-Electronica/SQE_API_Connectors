/*
 * SQE API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DetailedUserDTO struct for DetailedUserDTO
type DetailedUserDTO struct {
	Forename NullableString `json:"forename,omitempty"`
	Surname NullableString `json:"surname,omitempty"`
	Organization NullableString `json:"organization,omitempty"`
	Activated bool `json:"activated"`
	UserId int32 `json:"userId"`
	Email string `json:"email"`
}

// NewDetailedUserDTO instantiates a new DetailedUserDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDetailedUserDTO(activated bool, userId int32, email string, ) *DetailedUserDTO {
	this := DetailedUserDTO{}
	this.Activated = activated
	this.UserId = userId
	this.Email = email
	return &this
}

// NewDetailedUserDTOWithDefaults instantiates a new DetailedUserDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDetailedUserDTOWithDefaults() *DetailedUserDTO {
	this := DetailedUserDTO{}
	return &this
}

// GetForename returns the Forename field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DetailedUserDTO) GetForename() string {
	if o == nil || o.Forename.Get() == nil {
		var ret string
		return ret
	}
	return *o.Forename.Get()
}

// GetForenameOk returns a tuple with the Forename field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DetailedUserDTO) GetForenameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Forename.Get(), o.Forename.IsSet()
}

// HasForename returns a boolean if a field has been set.
func (o *DetailedUserDTO) HasForename() bool {
	if o != nil && o.Forename.IsSet() {
		return true
	}

	return false
}

// SetForename gets a reference to the given NullableString and assigns it to the Forename field.
func (o *DetailedUserDTO) SetForename(v string) {
	o.Forename.Set(&v)
}
// SetForenameNil sets the value for Forename to be an explicit nil
func (o *DetailedUserDTO) SetForenameNil() {
	o.Forename.Set(nil)
}

// UnsetForename ensures that no value is present for Forename, not even an explicit nil
func (o *DetailedUserDTO) UnsetForename() {
	o.Forename.Unset()
}

// GetSurname returns the Surname field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DetailedUserDTO) GetSurname() string {
	if o == nil || o.Surname.Get() == nil {
		var ret string
		return ret
	}
	return *o.Surname.Get()
}

// GetSurnameOk returns a tuple with the Surname field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DetailedUserDTO) GetSurnameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Surname.Get(), o.Surname.IsSet()
}

// HasSurname returns a boolean if a field has been set.
func (o *DetailedUserDTO) HasSurname() bool {
	if o != nil && o.Surname.IsSet() {
		return true
	}

	return false
}

// SetSurname gets a reference to the given NullableString and assigns it to the Surname field.
func (o *DetailedUserDTO) SetSurname(v string) {
	o.Surname.Set(&v)
}
// SetSurnameNil sets the value for Surname to be an explicit nil
func (o *DetailedUserDTO) SetSurnameNil() {
	o.Surname.Set(nil)
}

// UnsetSurname ensures that no value is present for Surname, not even an explicit nil
func (o *DetailedUserDTO) UnsetSurname() {
	o.Surname.Unset()
}

// GetOrganization returns the Organization field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DetailedUserDTO) GetOrganization() string {
	if o == nil || o.Organization.Get() == nil {
		var ret string
		return ret
	}
	return *o.Organization.Get()
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DetailedUserDTO) GetOrganizationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Organization.Get(), o.Organization.IsSet()
}

// HasOrganization returns a boolean if a field has been set.
func (o *DetailedUserDTO) HasOrganization() bool {
	if o != nil && o.Organization.IsSet() {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given NullableString and assigns it to the Organization field.
func (o *DetailedUserDTO) SetOrganization(v string) {
	o.Organization.Set(&v)
}
// SetOrganizationNil sets the value for Organization to be an explicit nil
func (o *DetailedUserDTO) SetOrganizationNil() {
	o.Organization.Set(nil)
}

// UnsetOrganization ensures that no value is present for Organization, not even an explicit nil
func (o *DetailedUserDTO) UnsetOrganization() {
	o.Organization.Unset()
}

// GetActivated returns the Activated field value
func (o *DetailedUserDTO) GetActivated() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.Activated
}

// GetActivatedOk returns a tuple with the Activated field value
// and a boolean to check if the value has been set.
func (o *DetailedUserDTO) GetActivatedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Activated, true
}

// SetActivated sets field value
func (o *DetailedUserDTO) SetActivated(v bool) {
	o.Activated = v
}

// GetUserId returns the UserId field value
func (o *DetailedUserDTO) GetUserId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *DetailedUserDTO) GetUserIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *DetailedUserDTO) SetUserId(v int32) {
	o.UserId = v
}

// GetEmail returns the Email field value
func (o *DetailedUserDTO) GetEmail() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *DetailedUserDTO) GetEmailOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *DetailedUserDTO) SetEmail(v string) {
	o.Email = v
}

func (o DetailedUserDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Forename.IsSet() {
		toSerialize["forename"] = o.Forename.Get()
	}
	if o.Surname.IsSet() {
		toSerialize["surname"] = o.Surname.Get()
	}
	if o.Organization.IsSet() {
		toSerialize["organization"] = o.Organization.Get()
	}
	if true {
		toSerialize["activated"] = o.Activated
	}
	if true {
		toSerialize["userId"] = o.UserId
	}
	if true {
		toSerialize["email"] = o.Email
	}
	return json.Marshal(toSerialize)
}

type NullableDetailedUserDTO struct {
	value *DetailedUserDTO
	isSet bool
}

func (v NullableDetailedUserDTO) Get() *DetailedUserDTO {
	return v.value
}

func (v *NullableDetailedUserDTO) Set(val *DetailedUserDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableDetailedUserDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableDetailedUserDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDetailedUserDTO(val *DetailedUserDTO) *NullableDetailedUserDTO {
	return &NullableDetailedUserDTO{value: val, isSet: true}
}

func (v NullableDetailedUserDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDetailedUserDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


