/*
 * SQE API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TextEditionDTO struct for TextEditionDTO
type TextEditionDTO struct {
	ManuscriptId int32 `json:"manuscriptId"`
	EditionName string `json:"editionName"`
	EditorId int32 `json:"editorId"`
	Licence string `json:"licence"`
	Editors map[string]EditorDTO `json:"editors"`
	TextFragments []TextFragmentDTO `json:"textFragments"`
}

// NewTextEditionDTO instantiates a new TextEditionDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTextEditionDTO(manuscriptId int32, editionName string, editorId int32, licence string, editors map[string]EditorDTO, textFragments []TextFragmentDTO, ) *TextEditionDTO {
	this := TextEditionDTO{}
	this.ManuscriptId = manuscriptId
	this.EditionName = editionName
	this.EditorId = editorId
	this.Licence = licence
	this.Editors = editors
	this.TextFragments = textFragments
	return &this
}

// NewTextEditionDTOWithDefaults instantiates a new TextEditionDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTextEditionDTOWithDefaults() *TextEditionDTO {
	this := TextEditionDTO{}
	return &this
}

// GetManuscriptId returns the ManuscriptId field value
func (o *TextEditionDTO) GetManuscriptId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.ManuscriptId
}

// GetManuscriptIdOk returns a tuple with the ManuscriptId field value
// and a boolean to check if the value has been set.
func (o *TextEditionDTO) GetManuscriptIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ManuscriptId, true
}

// SetManuscriptId sets field value
func (o *TextEditionDTO) SetManuscriptId(v int32) {
	o.ManuscriptId = v
}

// GetEditionName returns the EditionName field value
func (o *TextEditionDTO) GetEditionName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.EditionName
}

// GetEditionNameOk returns a tuple with the EditionName field value
// and a boolean to check if the value has been set.
func (o *TextEditionDTO) GetEditionNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EditionName, true
}

// SetEditionName sets field value
func (o *TextEditionDTO) SetEditionName(v string) {
	o.EditionName = v
}

// GetEditorId returns the EditorId field value
func (o *TextEditionDTO) GetEditorId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.EditorId
}

// GetEditorIdOk returns a tuple with the EditorId field value
// and a boolean to check if the value has been set.
func (o *TextEditionDTO) GetEditorIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EditorId, true
}

// SetEditorId sets field value
func (o *TextEditionDTO) SetEditorId(v int32) {
	o.EditorId = v
}

// GetLicence returns the Licence field value
func (o *TextEditionDTO) GetLicence() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Licence
}

// GetLicenceOk returns a tuple with the Licence field value
// and a boolean to check if the value has been set.
func (o *TextEditionDTO) GetLicenceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Licence, true
}

// SetLicence sets field value
func (o *TextEditionDTO) SetLicence(v string) {
	o.Licence = v
}

// GetEditors returns the Editors field value
func (o *TextEditionDTO) GetEditors() map[string]EditorDTO {
	if o == nil  {
		var ret map[string]EditorDTO
		return ret
	}

	return o.Editors
}

// GetEditorsOk returns a tuple with the Editors field value
// and a boolean to check if the value has been set.
func (o *TextEditionDTO) GetEditorsOk() (*map[string]EditorDTO, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Editors, true
}

// SetEditors sets field value
func (o *TextEditionDTO) SetEditors(v map[string]EditorDTO) {
	o.Editors = v
}

// GetTextFragments returns the TextFragments field value
func (o *TextEditionDTO) GetTextFragments() []TextFragmentDTO {
	if o == nil  {
		var ret []TextFragmentDTO
		return ret
	}

	return o.TextFragments
}

// GetTextFragmentsOk returns a tuple with the TextFragments field value
// and a boolean to check if the value has been set.
func (o *TextEditionDTO) GetTextFragmentsOk() (*[]TextFragmentDTO, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TextFragments, true
}

// SetTextFragments sets field value
func (o *TextEditionDTO) SetTextFragments(v []TextFragmentDTO) {
	o.TextFragments = v
}

func (o TextEditionDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["manuscriptId"] = o.ManuscriptId
	}
	if true {
		toSerialize["editionName"] = o.EditionName
	}
	if true {
		toSerialize["editorId"] = o.EditorId
	}
	if true {
		toSerialize["licence"] = o.Licence
	}
	if true {
		toSerialize["editors"] = o.Editors
	}
	if true {
		toSerialize["textFragments"] = o.TextFragments
	}
	return json.Marshal(toSerialize)
}

type NullableTextEditionDTO struct {
	value *TextEditionDTO
	isSet bool
}

func (v NullableTextEditionDTO) Get() *TextEditionDTO {
	return v.value
}

func (v *NullableTextEditionDTO) Set(val *TextEditionDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableTextEditionDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableTextEditionDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTextEditionDTO(val *TextEditionDTO) *NullableTextEditionDTO {
	return &NullableTextEditionDTO{value: val, isSet: true}
}

func (v NullableTextEditionDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTextEditionDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


