/*
 * SQE API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CatalogueMatchListDTO struct for CatalogueMatchListDTO
type CatalogueMatchListDTO struct {
	Matches []CatalogueMatchDTO `json:"matches"`
}

// NewCatalogueMatchListDTO instantiates a new CatalogueMatchListDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogueMatchListDTO(matches []CatalogueMatchDTO, ) *CatalogueMatchListDTO {
	this := CatalogueMatchListDTO{}
	this.Matches = matches
	return &this
}

// NewCatalogueMatchListDTOWithDefaults instantiates a new CatalogueMatchListDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogueMatchListDTOWithDefaults() *CatalogueMatchListDTO {
	this := CatalogueMatchListDTO{}
	return &this
}

// GetMatches returns the Matches field value
func (o *CatalogueMatchListDTO) GetMatches() []CatalogueMatchDTO {
	if o == nil  {
		var ret []CatalogueMatchDTO
		return ret
	}

	return o.Matches
}

// GetMatchesOk returns a tuple with the Matches field value
// and a boolean to check if the value has been set.
func (o *CatalogueMatchListDTO) GetMatchesOk() (*[]CatalogueMatchDTO, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Matches, true
}

// SetMatches sets field value
func (o *CatalogueMatchListDTO) SetMatches(v []CatalogueMatchDTO) {
	o.Matches = v
}

func (o CatalogueMatchListDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["matches"] = o.Matches
	}
	return json.Marshal(toSerialize)
}

type NullableCatalogueMatchListDTO struct {
	value *CatalogueMatchListDTO
	isSet bool
}

func (v NullableCatalogueMatchListDTO) Get() *CatalogueMatchListDTO {
	return v.value
}

func (v *NullableCatalogueMatchListDTO) Set(val *CatalogueMatchListDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogueMatchListDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogueMatchListDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogueMatchListDTO(val *CatalogueMatchListDTO) *NullableCatalogueMatchListDTO {
	return &NullableCatalogueMatchListDTO{value: val, isSet: true}
}

func (v NullableCatalogueMatchListDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogueMatchListDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


