/*
 * SQE API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CreateArtefactDTO struct for CreateArtefactDTO
type CreateArtefactDTO struct {
	MasterImageId int32 `json:"masterImageId"`
	Mask string `json:"mask"`
	Placement NullablePlacementDTO `json:"placement,omitempty"`
	Name NullableString `json:"name,omitempty"`
	StatusMessage NullableString `json:"statusMessage,omitempty"`
}

// NewCreateArtefactDTO instantiates a new CreateArtefactDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateArtefactDTO(masterImageId int32, mask string, ) *CreateArtefactDTO {
	this := CreateArtefactDTO{}
	this.MasterImageId = masterImageId
	this.Mask = mask
	return &this
}

// NewCreateArtefactDTOWithDefaults instantiates a new CreateArtefactDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateArtefactDTOWithDefaults() *CreateArtefactDTO {
	this := CreateArtefactDTO{}
	return &this
}

// GetMasterImageId returns the MasterImageId field value
func (o *CreateArtefactDTO) GetMasterImageId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.MasterImageId
}

// GetMasterImageIdOk returns a tuple with the MasterImageId field value
// and a boolean to check if the value has been set.
func (o *CreateArtefactDTO) GetMasterImageIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MasterImageId, true
}

// SetMasterImageId sets field value
func (o *CreateArtefactDTO) SetMasterImageId(v int32) {
	o.MasterImageId = v
}

// GetMask returns the Mask field value
func (o *CreateArtefactDTO) GetMask() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Mask
}

// GetMaskOk returns a tuple with the Mask field value
// and a boolean to check if the value has been set.
func (o *CreateArtefactDTO) GetMaskOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Mask, true
}

// SetMask sets field value
func (o *CreateArtefactDTO) SetMask(v string) {
	o.Mask = v
}

// GetPlacement returns the Placement field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateArtefactDTO) GetPlacement() PlacementDTO {
	if o == nil || o.Placement.Get() == nil {
		var ret PlacementDTO
		return ret
	}
	return *o.Placement.Get()
}

// GetPlacementOk returns a tuple with the Placement field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateArtefactDTO) GetPlacementOk() (*PlacementDTO, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Placement.Get(), o.Placement.IsSet()
}

// HasPlacement returns a boolean if a field has been set.
func (o *CreateArtefactDTO) HasPlacement() bool {
	if o != nil && o.Placement.IsSet() {
		return true
	}

	return false
}

// SetPlacement gets a reference to the given NullablePlacementDTO and assigns it to the Placement field.
func (o *CreateArtefactDTO) SetPlacement(v PlacementDTO) {
	o.Placement.Set(&v)
}
// SetPlacementNil sets the value for Placement to be an explicit nil
func (o *CreateArtefactDTO) SetPlacementNil() {
	o.Placement.Set(nil)
}

// UnsetPlacement ensures that no value is present for Placement, not even an explicit nil
func (o *CreateArtefactDTO) UnsetPlacement() {
	o.Placement.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateArtefactDTO) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateArtefactDTO) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *CreateArtefactDTO) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *CreateArtefactDTO) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *CreateArtefactDTO) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *CreateArtefactDTO) UnsetName() {
	o.Name.Unset()
}

// GetStatusMessage returns the StatusMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateArtefactDTO) GetStatusMessage() string {
	if o == nil || o.StatusMessage.Get() == nil {
		var ret string
		return ret
	}
	return *o.StatusMessage.Get()
}

// GetStatusMessageOk returns a tuple with the StatusMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateArtefactDTO) GetStatusMessageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StatusMessage.Get(), o.StatusMessage.IsSet()
}

// HasStatusMessage returns a boolean if a field has been set.
func (o *CreateArtefactDTO) HasStatusMessage() bool {
	if o != nil && o.StatusMessage.IsSet() {
		return true
	}

	return false
}

// SetStatusMessage gets a reference to the given NullableString and assigns it to the StatusMessage field.
func (o *CreateArtefactDTO) SetStatusMessage(v string) {
	o.StatusMessage.Set(&v)
}
// SetStatusMessageNil sets the value for StatusMessage to be an explicit nil
func (o *CreateArtefactDTO) SetStatusMessageNil() {
	o.StatusMessage.Set(nil)
}

// UnsetStatusMessage ensures that no value is present for StatusMessage, not even an explicit nil
func (o *CreateArtefactDTO) UnsetStatusMessage() {
	o.StatusMessage.Unset()
}

func (o CreateArtefactDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["masterImageId"] = o.MasterImageId
	}
	if true {
		toSerialize["mask"] = o.Mask
	}
	if o.Placement.IsSet() {
		toSerialize["placement"] = o.Placement.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.StatusMessage.IsSet() {
		toSerialize["statusMessage"] = o.StatusMessage.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCreateArtefactDTO struct {
	value *CreateArtefactDTO
	isSet bool
}

func (v NullableCreateArtefactDTO) Get() *CreateArtefactDTO {
	return v.value
}

func (v *NullableCreateArtefactDTO) Set(val *CreateArtefactDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateArtefactDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateArtefactDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateArtefactDTO(val *CreateArtefactDTO) *NullableCreateArtefactDTO {
	return &NullableCreateArtefactDTO{value: val, isSet: true}
}

func (v NullableCreateArtefactDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateArtefactDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


