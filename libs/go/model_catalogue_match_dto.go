/*
 * SQE API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// CatalogueMatchDTO struct for CatalogueMatchDTO
type CatalogueMatchDTO struct {
	ImageCatalogId int32 `json:"imageCatalogId"`
	Institution string `json:"institution"`
	CatalogueNumber1 string `json:"catalogueNumber1"`
	CatalogueNumber2 NullableString `json:"catalogueNumber2,omitempty"`
	Proxy NullableString `json:"proxy,omitempty"`
	Url string `json:"url"`
	Filename string `json:"filename"`
	Suffix string `json:"suffix"`
	Thumbnail string `json:"thumbnail"`
	License string `json:"license"`
	IaaEditionCatalogueId int32 `json:"iaaEditionCatalogueId"`
	ManuscriptName string `json:"manuscriptName"`
	Name string `json:"name"`
	MatchAuthor string `json:"matchAuthor"`
	MatchConfirmationAuthor NullableString `json:"matchConfirmationAuthor,omitempty"`
	MatchId int32 `json:"matchId"`
	DateOfMatch time.Time `json:"dateOfMatch"`
	DateOfConfirmation NullableTime `json:"dateOfConfirmation,omitempty"`
	CatalogSide *SideDesignation `json:"catalogSide,omitempty"`
	ImagedObjectId string `json:"imagedObjectId"`
	ManuscriptId int32 `json:"manuscriptId"`
	EditionName string `json:"editionName"`
	EditionVolume string `json:"editionVolume"`
	EditionLocation1 string `json:"editionLocation1"`
	EditionLocation2 string `json:"editionLocation2"`
	EditionSide SideDesignation `json:"editionSide"`
	Comment NullableString `json:"comment,omitempty"`
	TextFragmentId int32 `json:"textFragmentId"`
	EditionId int32 `json:"editionId"`
	Confirmed NullableBool `json:"confirmed,omitempty"`
}

// NewCatalogueMatchDTO instantiates a new CatalogueMatchDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogueMatchDTO(imageCatalogId int32, institution string, catalogueNumber1 string, url string, filename string, suffix string, thumbnail string, license string, iaaEditionCatalogueId int32, manuscriptName string, name string, matchAuthor string, matchId int32, dateOfMatch time.Time, imagedObjectId string, manuscriptId int32, editionName string, editionVolume string, editionLocation1 string, editionLocation2 string, editionSide SideDesignation, textFragmentId int32, editionId int32, ) *CatalogueMatchDTO {
	this := CatalogueMatchDTO{}
	this.ImageCatalogId = imageCatalogId
	this.Institution = institution
	this.CatalogueNumber1 = catalogueNumber1
	this.Url = url
	this.Filename = filename
	this.Suffix = suffix
	this.Thumbnail = thumbnail
	this.License = license
	this.IaaEditionCatalogueId = iaaEditionCatalogueId
	this.ManuscriptName = manuscriptName
	this.Name = name
	this.MatchAuthor = matchAuthor
	this.MatchId = matchId
	this.DateOfMatch = dateOfMatch
	this.ImagedObjectId = imagedObjectId
	this.ManuscriptId = manuscriptId
	this.EditionName = editionName
	this.EditionVolume = editionVolume
	this.EditionLocation1 = editionLocation1
	this.EditionLocation2 = editionLocation2
	this.EditionSide = editionSide
	this.TextFragmentId = textFragmentId
	this.EditionId = editionId
	return &this
}

// NewCatalogueMatchDTOWithDefaults instantiates a new CatalogueMatchDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogueMatchDTOWithDefaults() *CatalogueMatchDTO {
	this := CatalogueMatchDTO{}
	return &this
}

// GetImageCatalogId returns the ImageCatalogId field value
func (o *CatalogueMatchDTO) GetImageCatalogId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.ImageCatalogId
}

// GetImageCatalogIdOk returns a tuple with the ImageCatalogId field value
// and a boolean to check if the value has been set.
func (o *CatalogueMatchDTO) GetImageCatalogIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ImageCatalogId, true
}

// SetImageCatalogId sets field value
func (o *CatalogueMatchDTO) SetImageCatalogId(v int32) {
	o.ImageCatalogId = v
}

// GetInstitution returns the Institution field value
func (o *CatalogueMatchDTO) GetInstitution() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Institution
}

// GetInstitutionOk returns a tuple with the Institution field value
// and a boolean to check if the value has been set.
func (o *CatalogueMatchDTO) GetInstitutionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Institution, true
}

// SetInstitution sets field value
func (o *CatalogueMatchDTO) SetInstitution(v string) {
	o.Institution = v
}

// GetCatalogueNumber1 returns the CatalogueNumber1 field value
func (o *CatalogueMatchDTO) GetCatalogueNumber1() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.CatalogueNumber1
}

// GetCatalogueNumber1Ok returns a tuple with the CatalogueNumber1 field value
// and a boolean to check if the value has been set.
func (o *CatalogueMatchDTO) GetCatalogueNumber1Ok() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CatalogueNumber1, true
}

// SetCatalogueNumber1 sets field value
func (o *CatalogueMatchDTO) SetCatalogueNumber1(v string) {
	o.CatalogueNumber1 = v
}

// GetCatalogueNumber2 returns the CatalogueNumber2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogueMatchDTO) GetCatalogueNumber2() string {
	if o == nil || o.CatalogueNumber2.Get() == nil {
		var ret string
		return ret
	}
	return *o.CatalogueNumber2.Get()
}

// GetCatalogueNumber2Ok returns a tuple with the CatalogueNumber2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogueMatchDTO) GetCatalogueNumber2Ok() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CatalogueNumber2.Get(), o.CatalogueNumber2.IsSet()
}

// HasCatalogueNumber2 returns a boolean if a field has been set.
func (o *CatalogueMatchDTO) HasCatalogueNumber2() bool {
	if o != nil && o.CatalogueNumber2.IsSet() {
		return true
	}

	return false
}

// SetCatalogueNumber2 gets a reference to the given NullableString and assigns it to the CatalogueNumber2 field.
func (o *CatalogueMatchDTO) SetCatalogueNumber2(v string) {
	o.CatalogueNumber2.Set(&v)
}
// SetCatalogueNumber2Nil sets the value for CatalogueNumber2 to be an explicit nil
func (o *CatalogueMatchDTO) SetCatalogueNumber2Nil() {
	o.CatalogueNumber2.Set(nil)
}

// UnsetCatalogueNumber2 ensures that no value is present for CatalogueNumber2, not even an explicit nil
func (o *CatalogueMatchDTO) UnsetCatalogueNumber2() {
	o.CatalogueNumber2.Unset()
}

// GetProxy returns the Proxy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogueMatchDTO) GetProxy() string {
	if o == nil || o.Proxy.Get() == nil {
		var ret string
		return ret
	}
	return *o.Proxy.Get()
}

// GetProxyOk returns a tuple with the Proxy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogueMatchDTO) GetProxyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Proxy.Get(), o.Proxy.IsSet()
}

// HasProxy returns a boolean if a field has been set.
func (o *CatalogueMatchDTO) HasProxy() bool {
	if o != nil && o.Proxy.IsSet() {
		return true
	}

	return false
}

// SetProxy gets a reference to the given NullableString and assigns it to the Proxy field.
func (o *CatalogueMatchDTO) SetProxy(v string) {
	o.Proxy.Set(&v)
}
// SetProxyNil sets the value for Proxy to be an explicit nil
func (o *CatalogueMatchDTO) SetProxyNil() {
	o.Proxy.Set(nil)
}

// UnsetProxy ensures that no value is present for Proxy, not even an explicit nil
func (o *CatalogueMatchDTO) UnsetProxy() {
	o.Proxy.Unset()
}

// GetUrl returns the Url field value
func (o *CatalogueMatchDTO) GetUrl() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *CatalogueMatchDTO) GetUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *CatalogueMatchDTO) SetUrl(v string) {
	o.Url = v
}

// GetFilename returns the Filename field value
func (o *CatalogueMatchDTO) GetFilename() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Filename
}

// GetFilenameOk returns a tuple with the Filename field value
// and a boolean to check if the value has been set.
func (o *CatalogueMatchDTO) GetFilenameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Filename, true
}

// SetFilename sets field value
func (o *CatalogueMatchDTO) SetFilename(v string) {
	o.Filename = v
}

// GetSuffix returns the Suffix field value
func (o *CatalogueMatchDTO) GetSuffix() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Suffix
}

// GetSuffixOk returns a tuple with the Suffix field value
// and a boolean to check if the value has been set.
func (o *CatalogueMatchDTO) GetSuffixOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Suffix, true
}

// SetSuffix sets field value
func (o *CatalogueMatchDTO) SetSuffix(v string) {
	o.Suffix = v
}

// GetThumbnail returns the Thumbnail field value
func (o *CatalogueMatchDTO) GetThumbnail() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Thumbnail
}

// GetThumbnailOk returns a tuple with the Thumbnail field value
// and a boolean to check if the value has been set.
func (o *CatalogueMatchDTO) GetThumbnailOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Thumbnail, true
}

// SetThumbnail sets field value
func (o *CatalogueMatchDTO) SetThumbnail(v string) {
	o.Thumbnail = v
}

// GetLicense returns the License field value
func (o *CatalogueMatchDTO) GetLicense() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.License
}

// GetLicenseOk returns a tuple with the License field value
// and a boolean to check if the value has been set.
func (o *CatalogueMatchDTO) GetLicenseOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.License, true
}

// SetLicense sets field value
func (o *CatalogueMatchDTO) SetLicense(v string) {
	o.License = v
}

// GetIaaEditionCatalogueId returns the IaaEditionCatalogueId field value
func (o *CatalogueMatchDTO) GetIaaEditionCatalogueId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.IaaEditionCatalogueId
}

// GetIaaEditionCatalogueIdOk returns a tuple with the IaaEditionCatalogueId field value
// and a boolean to check if the value has been set.
func (o *CatalogueMatchDTO) GetIaaEditionCatalogueIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IaaEditionCatalogueId, true
}

// SetIaaEditionCatalogueId sets field value
func (o *CatalogueMatchDTO) SetIaaEditionCatalogueId(v int32) {
	o.IaaEditionCatalogueId = v
}

// GetManuscriptName returns the ManuscriptName field value
func (o *CatalogueMatchDTO) GetManuscriptName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ManuscriptName
}

// GetManuscriptNameOk returns a tuple with the ManuscriptName field value
// and a boolean to check if the value has been set.
func (o *CatalogueMatchDTO) GetManuscriptNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ManuscriptName, true
}

// SetManuscriptName sets field value
func (o *CatalogueMatchDTO) SetManuscriptName(v string) {
	o.ManuscriptName = v
}

// GetName returns the Name field value
func (o *CatalogueMatchDTO) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CatalogueMatchDTO) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CatalogueMatchDTO) SetName(v string) {
	o.Name = v
}

// GetMatchAuthor returns the MatchAuthor field value
func (o *CatalogueMatchDTO) GetMatchAuthor() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.MatchAuthor
}

// GetMatchAuthorOk returns a tuple with the MatchAuthor field value
// and a boolean to check if the value has been set.
func (o *CatalogueMatchDTO) GetMatchAuthorOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MatchAuthor, true
}

// SetMatchAuthor sets field value
func (o *CatalogueMatchDTO) SetMatchAuthor(v string) {
	o.MatchAuthor = v
}

// GetMatchConfirmationAuthor returns the MatchConfirmationAuthor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogueMatchDTO) GetMatchConfirmationAuthor() string {
	if o == nil || o.MatchConfirmationAuthor.Get() == nil {
		var ret string
		return ret
	}
	return *o.MatchConfirmationAuthor.Get()
}

// GetMatchConfirmationAuthorOk returns a tuple with the MatchConfirmationAuthor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogueMatchDTO) GetMatchConfirmationAuthorOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MatchConfirmationAuthor.Get(), o.MatchConfirmationAuthor.IsSet()
}

// HasMatchConfirmationAuthor returns a boolean if a field has been set.
func (o *CatalogueMatchDTO) HasMatchConfirmationAuthor() bool {
	if o != nil && o.MatchConfirmationAuthor.IsSet() {
		return true
	}

	return false
}

// SetMatchConfirmationAuthor gets a reference to the given NullableString and assigns it to the MatchConfirmationAuthor field.
func (o *CatalogueMatchDTO) SetMatchConfirmationAuthor(v string) {
	o.MatchConfirmationAuthor.Set(&v)
}
// SetMatchConfirmationAuthorNil sets the value for MatchConfirmationAuthor to be an explicit nil
func (o *CatalogueMatchDTO) SetMatchConfirmationAuthorNil() {
	o.MatchConfirmationAuthor.Set(nil)
}

// UnsetMatchConfirmationAuthor ensures that no value is present for MatchConfirmationAuthor, not even an explicit nil
func (o *CatalogueMatchDTO) UnsetMatchConfirmationAuthor() {
	o.MatchConfirmationAuthor.Unset()
}

// GetMatchId returns the MatchId field value
func (o *CatalogueMatchDTO) GetMatchId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.MatchId
}

// GetMatchIdOk returns a tuple with the MatchId field value
// and a boolean to check if the value has been set.
func (o *CatalogueMatchDTO) GetMatchIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MatchId, true
}

// SetMatchId sets field value
func (o *CatalogueMatchDTO) SetMatchId(v int32) {
	o.MatchId = v
}

// GetDateOfMatch returns the DateOfMatch field value
func (o *CatalogueMatchDTO) GetDateOfMatch() time.Time {
	if o == nil  {
		var ret time.Time
		return ret
	}

	return o.DateOfMatch
}

// GetDateOfMatchOk returns a tuple with the DateOfMatch field value
// and a boolean to check if the value has been set.
func (o *CatalogueMatchDTO) GetDateOfMatchOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DateOfMatch, true
}

// SetDateOfMatch sets field value
func (o *CatalogueMatchDTO) SetDateOfMatch(v time.Time) {
	o.DateOfMatch = v
}

// GetDateOfConfirmation returns the DateOfConfirmation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogueMatchDTO) GetDateOfConfirmation() time.Time {
	if o == nil || o.DateOfConfirmation.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.DateOfConfirmation.Get()
}

// GetDateOfConfirmationOk returns a tuple with the DateOfConfirmation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogueMatchDTO) GetDateOfConfirmationOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DateOfConfirmation.Get(), o.DateOfConfirmation.IsSet()
}

// HasDateOfConfirmation returns a boolean if a field has been set.
func (o *CatalogueMatchDTO) HasDateOfConfirmation() bool {
	if o != nil && o.DateOfConfirmation.IsSet() {
		return true
	}

	return false
}

// SetDateOfConfirmation gets a reference to the given NullableTime and assigns it to the DateOfConfirmation field.
func (o *CatalogueMatchDTO) SetDateOfConfirmation(v time.Time) {
	o.DateOfConfirmation.Set(&v)
}
// SetDateOfConfirmationNil sets the value for DateOfConfirmation to be an explicit nil
func (o *CatalogueMatchDTO) SetDateOfConfirmationNil() {
	o.DateOfConfirmation.Set(nil)
}

// UnsetDateOfConfirmation ensures that no value is present for DateOfConfirmation, not even an explicit nil
func (o *CatalogueMatchDTO) UnsetDateOfConfirmation() {
	o.DateOfConfirmation.Unset()
}

// GetCatalogSide returns the CatalogSide field value if set, zero value otherwise.
func (o *CatalogueMatchDTO) GetCatalogSide() SideDesignation {
	if o == nil || o.CatalogSide == nil {
		var ret SideDesignation
		return ret
	}
	return *o.CatalogSide
}

// GetCatalogSideOk returns a tuple with the CatalogSide field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogueMatchDTO) GetCatalogSideOk() (*SideDesignation, bool) {
	if o == nil || o.CatalogSide == nil {
		return nil, false
	}
	return o.CatalogSide, true
}

// HasCatalogSide returns a boolean if a field has been set.
func (o *CatalogueMatchDTO) HasCatalogSide() bool {
	if o != nil && o.CatalogSide != nil {
		return true
	}

	return false
}

// SetCatalogSide gets a reference to the given SideDesignation and assigns it to the CatalogSide field.
func (o *CatalogueMatchDTO) SetCatalogSide(v SideDesignation) {
	o.CatalogSide = &v
}

// GetImagedObjectId returns the ImagedObjectId field value
func (o *CatalogueMatchDTO) GetImagedObjectId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ImagedObjectId
}

// GetImagedObjectIdOk returns a tuple with the ImagedObjectId field value
// and a boolean to check if the value has been set.
func (o *CatalogueMatchDTO) GetImagedObjectIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ImagedObjectId, true
}

// SetImagedObjectId sets field value
func (o *CatalogueMatchDTO) SetImagedObjectId(v string) {
	o.ImagedObjectId = v
}

// GetManuscriptId returns the ManuscriptId field value
func (o *CatalogueMatchDTO) GetManuscriptId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.ManuscriptId
}

// GetManuscriptIdOk returns a tuple with the ManuscriptId field value
// and a boolean to check if the value has been set.
func (o *CatalogueMatchDTO) GetManuscriptIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ManuscriptId, true
}

// SetManuscriptId sets field value
func (o *CatalogueMatchDTO) SetManuscriptId(v int32) {
	o.ManuscriptId = v
}

// GetEditionName returns the EditionName field value
func (o *CatalogueMatchDTO) GetEditionName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.EditionName
}

// GetEditionNameOk returns a tuple with the EditionName field value
// and a boolean to check if the value has been set.
func (o *CatalogueMatchDTO) GetEditionNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EditionName, true
}

// SetEditionName sets field value
func (o *CatalogueMatchDTO) SetEditionName(v string) {
	o.EditionName = v
}

// GetEditionVolume returns the EditionVolume field value
func (o *CatalogueMatchDTO) GetEditionVolume() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.EditionVolume
}

// GetEditionVolumeOk returns a tuple with the EditionVolume field value
// and a boolean to check if the value has been set.
func (o *CatalogueMatchDTO) GetEditionVolumeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EditionVolume, true
}

// SetEditionVolume sets field value
func (o *CatalogueMatchDTO) SetEditionVolume(v string) {
	o.EditionVolume = v
}

// GetEditionLocation1 returns the EditionLocation1 field value
func (o *CatalogueMatchDTO) GetEditionLocation1() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.EditionLocation1
}

// GetEditionLocation1Ok returns a tuple with the EditionLocation1 field value
// and a boolean to check if the value has been set.
func (o *CatalogueMatchDTO) GetEditionLocation1Ok() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EditionLocation1, true
}

// SetEditionLocation1 sets field value
func (o *CatalogueMatchDTO) SetEditionLocation1(v string) {
	o.EditionLocation1 = v
}

// GetEditionLocation2 returns the EditionLocation2 field value
func (o *CatalogueMatchDTO) GetEditionLocation2() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.EditionLocation2
}

// GetEditionLocation2Ok returns a tuple with the EditionLocation2 field value
// and a boolean to check if the value has been set.
func (o *CatalogueMatchDTO) GetEditionLocation2Ok() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EditionLocation2, true
}

// SetEditionLocation2 sets field value
func (o *CatalogueMatchDTO) SetEditionLocation2(v string) {
	o.EditionLocation2 = v
}

// GetEditionSide returns the EditionSide field value
func (o *CatalogueMatchDTO) GetEditionSide() SideDesignation {
	if o == nil  {
		var ret SideDesignation
		return ret
	}

	return o.EditionSide
}

// GetEditionSideOk returns a tuple with the EditionSide field value
// and a boolean to check if the value has been set.
func (o *CatalogueMatchDTO) GetEditionSideOk() (*SideDesignation, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EditionSide, true
}

// SetEditionSide sets field value
func (o *CatalogueMatchDTO) SetEditionSide(v SideDesignation) {
	o.EditionSide = v
}

// GetComment returns the Comment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogueMatchDTO) GetComment() string {
	if o == nil || o.Comment.Get() == nil {
		var ret string
		return ret
	}
	return *o.Comment.Get()
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogueMatchDTO) GetCommentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Comment.Get(), o.Comment.IsSet()
}

// HasComment returns a boolean if a field has been set.
func (o *CatalogueMatchDTO) HasComment() bool {
	if o != nil && o.Comment.IsSet() {
		return true
	}

	return false
}

// SetComment gets a reference to the given NullableString and assigns it to the Comment field.
func (o *CatalogueMatchDTO) SetComment(v string) {
	o.Comment.Set(&v)
}
// SetCommentNil sets the value for Comment to be an explicit nil
func (o *CatalogueMatchDTO) SetCommentNil() {
	o.Comment.Set(nil)
}

// UnsetComment ensures that no value is present for Comment, not even an explicit nil
func (o *CatalogueMatchDTO) UnsetComment() {
	o.Comment.Unset()
}

// GetTextFragmentId returns the TextFragmentId field value
func (o *CatalogueMatchDTO) GetTextFragmentId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.TextFragmentId
}

// GetTextFragmentIdOk returns a tuple with the TextFragmentId field value
// and a boolean to check if the value has been set.
func (o *CatalogueMatchDTO) GetTextFragmentIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TextFragmentId, true
}

// SetTextFragmentId sets field value
func (o *CatalogueMatchDTO) SetTextFragmentId(v int32) {
	o.TextFragmentId = v
}

// GetEditionId returns the EditionId field value
func (o *CatalogueMatchDTO) GetEditionId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.EditionId
}

// GetEditionIdOk returns a tuple with the EditionId field value
// and a boolean to check if the value has been set.
func (o *CatalogueMatchDTO) GetEditionIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EditionId, true
}

// SetEditionId sets field value
func (o *CatalogueMatchDTO) SetEditionId(v int32) {
	o.EditionId = v
}

// GetConfirmed returns the Confirmed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogueMatchDTO) GetConfirmed() bool {
	if o == nil || o.Confirmed.Get() == nil {
		var ret bool
		return ret
	}
	return *o.Confirmed.Get()
}

// GetConfirmedOk returns a tuple with the Confirmed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogueMatchDTO) GetConfirmedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Confirmed.Get(), o.Confirmed.IsSet()
}

// HasConfirmed returns a boolean if a field has been set.
func (o *CatalogueMatchDTO) HasConfirmed() bool {
	if o != nil && o.Confirmed.IsSet() {
		return true
	}

	return false
}

// SetConfirmed gets a reference to the given NullableBool and assigns it to the Confirmed field.
func (o *CatalogueMatchDTO) SetConfirmed(v bool) {
	o.Confirmed.Set(&v)
}
// SetConfirmedNil sets the value for Confirmed to be an explicit nil
func (o *CatalogueMatchDTO) SetConfirmedNil() {
	o.Confirmed.Set(nil)
}

// UnsetConfirmed ensures that no value is present for Confirmed, not even an explicit nil
func (o *CatalogueMatchDTO) UnsetConfirmed() {
	o.Confirmed.Unset()
}

func (o CatalogueMatchDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["imageCatalogId"] = o.ImageCatalogId
	}
	if true {
		toSerialize["institution"] = o.Institution
	}
	if true {
		toSerialize["catalogueNumber1"] = o.CatalogueNumber1
	}
	if o.CatalogueNumber2.IsSet() {
		toSerialize["catalogueNumber2"] = o.CatalogueNumber2.Get()
	}
	if o.Proxy.IsSet() {
		toSerialize["proxy"] = o.Proxy.Get()
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["filename"] = o.Filename
	}
	if true {
		toSerialize["suffix"] = o.Suffix
	}
	if true {
		toSerialize["thumbnail"] = o.Thumbnail
	}
	if true {
		toSerialize["license"] = o.License
	}
	if true {
		toSerialize["iaaEditionCatalogueId"] = o.IaaEditionCatalogueId
	}
	if true {
		toSerialize["manuscriptName"] = o.ManuscriptName
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["matchAuthor"] = o.MatchAuthor
	}
	if o.MatchConfirmationAuthor.IsSet() {
		toSerialize["matchConfirmationAuthor"] = o.MatchConfirmationAuthor.Get()
	}
	if true {
		toSerialize["matchId"] = o.MatchId
	}
	if true {
		toSerialize["dateOfMatch"] = o.DateOfMatch
	}
	if o.DateOfConfirmation.IsSet() {
		toSerialize["dateOfConfirmation"] = o.DateOfConfirmation.Get()
	}
	if o.CatalogSide != nil {
		toSerialize["catalogSide"] = o.CatalogSide
	}
	if true {
		toSerialize["imagedObjectId"] = o.ImagedObjectId
	}
	if true {
		toSerialize["manuscriptId"] = o.ManuscriptId
	}
	if true {
		toSerialize["editionName"] = o.EditionName
	}
	if true {
		toSerialize["editionVolume"] = o.EditionVolume
	}
	if true {
		toSerialize["editionLocation1"] = o.EditionLocation1
	}
	if true {
		toSerialize["editionLocation2"] = o.EditionLocation2
	}
	if true {
		toSerialize["editionSide"] = o.EditionSide
	}
	if o.Comment.IsSet() {
		toSerialize["comment"] = o.Comment.Get()
	}
	if true {
		toSerialize["textFragmentId"] = o.TextFragmentId
	}
	if true {
		toSerialize["editionId"] = o.EditionId
	}
	if o.Confirmed.IsSet() {
		toSerialize["confirmed"] = o.Confirmed.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCatalogueMatchDTO struct {
	value *CatalogueMatchDTO
	isSet bool
}

func (v NullableCatalogueMatchDTO) Get() *CatalogueMatchDTO {
	return v.value
}

func (v *NullableCatalogueMatchDTO) Set(val *CatalogueMatchDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogueMatchDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogueMatchDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogueMatchDTO(val *CatalogueMatchDTO) *NullableCatalogueMatchDTO {
	return &NullableCatalogueMatchDTO{value: val, isSet: true}
}

func (v NullableCatalogueMatchDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogueMatchDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


