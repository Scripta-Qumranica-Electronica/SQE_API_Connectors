/*
 * SQE API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CatalogueMatchInputDTO struct for CatalogueMatchInputDTO
type CatalogueMatchInputDTO struct {
	CatalogSide *SideDesignation `json:"catalogSide,omitempty"`
	ImagedObjectId string `json:"imagedObjectId"`
	ManuscriptId int32 `json:"manuscriptId"`
	EditionName string `json:"editionName"`
	EditionVolume string `json:"editionVolume"`
	EditionLocation1 string `json:"editionLocation1"`
	EditionLocation2 string `json:"editionLocation2"`
	EditionSide SideDesignation `json:"editionSide"`
	Comment NullableString `json:"comment,omitempty"`
	TextFragmentId int32 `json:"textFragmentId"`
	EditionId int32 `json:"editionId"`
	Confirmed NullableBool `json:"confirmed,omitempty"`
}

// NewCatalogueMatchInputDTO instantiates a new CatalogueMatchInputDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogueMatchInputDTO(imagedObjectId string, manuscriptId int32, editionName string, editionVolume string, editionLocation1 string, editionLocation2 string, editionSide SideDesignation, textFragmentId int32, editionId int32, ) *CatalogueMatchInputDTO {
	this := CatalogueMatchInputDTO{}
	this.ImagedObjectId = imagedObjectId
	this.ManuscriptId = manuscriptId
	this.EditionName = editionName
	this.EditionVolume = editionVolume
	this.EditionLocation1 = editionLocation1
	this.EditionLocation2 = editionLocation2
	this.EditionSide = editionSide
	this.TextFragmentId = textFragmentId
	this.EditionId = editionId
	return &this
}

// NewCatalogueMatchInputDTOWithDefaults instantiates a new CatalogueMatchInputDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogueMatchInputDTOWithDefaults() *CatalogueMatchInputDTO {
	this := CatalogueMatchInputDTO{}
	return &this
}

// GetCatalogSide returns the CatalogSide field value if set, zero value otherwise.
func (o *CatalogueMatchInputDTO) GetCatalogSide() SideDesignation {
	if o == nil || o.CatalogSide == nil {
		var ret SideDesignation
		return ret
	}
	return *o.CatalogSide
}

// GetCatalogSideOk returns a tuple with the CatalogSide field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogueMatchInputDTO) GetCatalogSideOk() (*SideDesignation, bool) {
	if o == nil || o.CatalogSide == nil {
		return nil, false
	}
	return o.CatalogSide, true
}

// HasCatalogSide returns a boolean if a field has been set.
func (o *CatalogueMatchInputDTO) HasCatalogSide() bool {
	if o != nil && o.CatalogSide != nil {
		return true
	}

	return false
}

// SetCatalogSide gets a reference to the given SideDesignation and assigns it to the CatalogSide field.
func (o *CatalogueMatchInputDTO) SetCatalogSide(v SideDesignation) {
	o.CatalogSide = &v
}

// GetImagedObjectId returns the ImagedObjectId field value
func (o *CatalogueMatchInputDTO) GetImagedObjectId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ImagedObjectId
}

// GetImagedObjectIdOk returns a tuple with the ImagedObjectId field value
// and a boolean to check if the value has been set.
func (o *CatalogueMatchInputDTO) GetImagedObjectIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ImagedObjectId, true
}

// SetImagedObjectId sets field value
func (o *CatalogueMatchInputDTO) SetImagedObjectId(v string) {
	o.ImagedObjectId = v
}

// GetManuscriptId returns the ManuscriptId field value
func (o *CatalogueMatchInputDTO) GetManuscriptId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.ManuscriptId
}

// GetManuscriptIdOk returns a tuple with the ManuscriptId field value
// and a boolean to check if the value has been set.
func (o *CatalogueMatchInputDTO) GetManuscriptIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ManuscriptId, true
}

// SetManuscriptId sets field value
func (o *CatalogueMatchInputDTO) SetManuscriptId(v int32) {
	o.ManuscriptId = v
}

// GetEditionName returns the EditionName field value
func (o *CatalogueMatchInputDTO) GetEditionName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.EditionName
}

// GetEditionNameOk returns a tuple with the EditionName field value
// and a boolean to check if the value has been set.
func (o *CatalogueMatchInputDTO) GetEditionNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EditionName, true
}

// SetEditionName sets field value
func (o *CatalogueMatchInputDTO) SetEditionName(v string) {
	o.EditionName = v
}

// GetEditionVolume returns the EditionVolume field value
func (o *CatalogueMatchInputDTO) GetEditionVolume() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.EditionVolume
}

// GetEditionVolumeOk returns a tuple with the EditionVolume field value
// and a boolean to check if the value has been set.
func (o *CatalogueMatchInputDTO) GetEditionVolumeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EditionVolume, true
}

// SetEditionVolume sets field value
func (o *CatalogueMatchInputDTO) SetEditionVolume(v string) {
	o.EditionVolume = v
}

// GetEditionLocation1 returns the EditionLocation1 field value
func (o *CatalogueMatchInputDTO) GetEditionLocation1() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.EditionLocation1
}

// GetEditionLocation1Ok returns a tuple with the EditionLocation1 field value
// and a boolean to check if the value has been set.
func (o *CatalogueMatchInputDTO) GetEditionLocation1Ok() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EditionLocation1, true
}

// SetEditionLocation1 sets field value
func (o *CatalogueMatchInputDTO) SetEditionLocation1(v string) {
	o.EditionLocation1 = v
}

// GetEditionLocation2 returns the EditionLocation2 field value
func (o *CatalogueMatchInputDTO) GetEditionLocation2() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.EditionLocation2
}

// GetEditionLocation2Ok returns a tuple with the EditionLocation2 field value
// and a boolean to check if the value has been set.
func (o *CatalogueMatchInputDTO) GetEditionLocation2Ok() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EditionLocation2, true
}

// SetEditionLocation2 sets field value
func (o *CatalogueMatchInputDTO) SetEditionLocation2(v string) {
	o.EditionLocation2 = v
}

// GetEditionSide returns the EditionSide field value
func (o *CatalogueMatchInputDTO) GetEditionSide() SideDesignation {
	if o == nil  {
		var ret SideDesignation
		return ret
	}

	return o.EditionSide
}

// GetEditionSideOk returns a tuple with the EditionSide field value
// and a boolean to check if the value has been set.
func (o *CatalogueMatchInputDTO) GetEditionSideOk() (*SideDesignation, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EditionSide, true
}

// SetEditionSide sets field value
func (o *CatalogueMatchInputDTO) SetEditionSide(v SideDesignation) {
	o.EditionSide = v
}

// GetComment returns the Comment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogueMatchInputDTO) GetComment() string {
	if o == nil || o.Comment.Get() == nil {
		var ret string
		return ret
	}
	return *o.Comment.Get()
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogueMatchInputDTO) GetCommentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Comment.Get(), o.Comment.IsSet()
}

// HasComment returns a boolean if a field has been set.
func (o *CatalogueMatchInputDTO) HasComment() bool {
	if o != nil && o.Comment.IsSet() {
		return true
	}

	return false
}

// SetComment gets a reference to the given NullableString and assigns it to the Comment field.
func (o *CatalogueMatchInputDTO) SetComment(v string) {
	o.Comment.Set(&v)
}
// SetCommentNil sets the value for Comment to be an explicit nil
func (o *CatalogueMatchInputDTO) SetCommentNil() {
	o.Comment.Set(nil)
}

// UnsetComment ensures that no value is present for Comment, not even an explicit nil
func (o *CatalogueMatchInputDTO) UnsetComment() {
	o.Comment.Unset()
}

// GetTextFragmentId returns the TextFragmentId field value
func (o *CatalogueMatchInputDTO) GetTextFragmentId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.TextFragmentId
}

// GetTextFragmentIdOk returns a tuple with the TextFragmentId field value
// and a boolean to check if the value has been set.
func (o *CatalogueMatchInputDTO) GetTextFragmentIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TextFragmentId, true
}

// SetTextFragmentId sets field value
func (o *CatalogueMatchInputDTO) SetTextFragmentId(v int32) {
	o.TextFragmentId = v
}

// GetEditionId returns the EditionId field value
func (o *CatalogueMatchInputDTO) GetEditionId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.EditionId
}

// GetEditionIdOk returns a tuple with the EditionId field value
// and a boolean to check if the value has been set.
func (o *CatalogueMatchInputDTO) GetEditionIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EditionId, true
}

// SetEditionId sets field value
func (o *CatalogueMatchInputDTO) SetEditionId(v int32) {
	o.EditionId = v
}

// GetConfirmed returns the Confirmed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogueMatchInputDTO) GetConfirmed() bool {
	if o == nil || o.Confirmed.Get() == nil {
		var ret bool
		return ret
	}
	return *o.Confirmed.Get()
}

// GetConfirmedOk returns a tuple with the Confirmed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogueMatchInputDTO) GetConfirmedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Confirmed.Get(), o.Confirmed.IsSet()
}

// HasConfirmed returns a boolean if a field has been set.
func (o *CatalogueMatchInputDTO) HasConfirmed() bool {
	if o != nil && o.Confirmed.IsSet() {
		return true
	}

	return false
}

// SetConfirmed gets a reference to the given NullableBool and assigns it to the Confirmed field.
func (o *CatalogueMatchInputDTO) SetConfirmed(v bool) {
	o.Confirmed.Set(&v)
}
// SetConfirmedNil sets the value for Confirmed to be an explicit nil
func (o *CatalogueMatchInputDTO) SetConfirmedNil() {
	o.Confirmed.Set(nil)
}

// UnsetConfirmed ensures that no value is present for Confirmed, not even an explicit nil
func (o *CatalogueMatchInputDTO) UnsetConfirmed() {
	o.Confirmed.Unset()
}

func (o CatalogueMatchInputDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CatalogSide != nil {
		toSerialize["catalogSide"] = o.CatalogSide
	}
	if true {
		toSerialize["imagedObjectId"] = o.ImagedObjectId
	}
	if true {
		toSerialize["manuscriptId"] = o.ManuscriptId
	}
	if true {
		toSerialize["editionName"] = o.EditionName
	}
	if true {
		toSerialize["editionVolume"] = o.EditionVolume
	}
	if true {
		toSerialize["editionLocation1"] = o.EditionLocation1
	}
	if true {
		toSerialize["editionLocation2"] = o.EditionLocation2
	}
	if true {
		toSerialize["editionSide"] = o.EditionSide
	}
	if o.Comment.IsSet() {
		toSerialize["comment"] = o.Comment.Get()
	}
	if true {
		toSerialize["textFragmentId"] = o.TextFragmentId
	}
	if true {
		toSerialize["editionId"] = o.EditionId
	}
	if o.Confirmed.IsSet() {
		toSerialize["confirmed"] = o.Confirmed.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCatalogueMatchInputDTO struct {
	value *CatalogueMatchInputDTO
	isSet bool
}

func (v NullableCatalogueMatchInputDTO) Get() *CatalogueMatchInputDTO {
	return v.value
}

func (v *NullableCatalogueMatchInputDTO) Set(val *CatalogueMatchInputDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogueMatchInputDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogueMatchInputDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogueMatchInputDTO(val *CatalogueMatchInputDTO) *NullableCatalogueMatchInputDTO {
	return &NullableCatalogueMatchInputDTO{value: val, isSet: true}
}

func (v NullableCatalogueMatchInputDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogueMatchInputDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


