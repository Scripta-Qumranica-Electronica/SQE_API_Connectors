/*
 * SQE API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SimpleImageListDTO struct for SimpleImageListDTO
type SimpleImageListDTO struct {
	Images []SimpleImageDTO `json:"images"`
}

// NewSimpleImageListDTO instantiates a new SimpleImageListDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSimpleImageListDTO(images []SimpleImageDTO, ) *SimpleImageListDTO {
	this := SimpleImageListDTO{}
	this.Images = images
	return &this
}

// NewSimpleImageListDTOWithDefaults instantiates a new SimpleImageListDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSimpleImageListDTOWithDefaults() *SimpleImageListDTO {
	this := SimpleImageListDTO{}
	return &this
}

// GetImages returns the Images field value
func (o *SimpleImageListDTO) GetImages() []SimpleImageDTO {
	if o == nil  {
		var ret []SimpleImageDTO
		return ret
	}

	return o.Images
}

// GetImagesOk returns a tuple with the Images field value
// and a boolean to check if the value has been set.
func (o *SimpleImageListDTO) GetImagesOk() (*[]SimpleImageDTO, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Images, true
}

// SetImages sets field value
func (o *SimpleImageListDTO) SetImages(v []SimpleImageDTO) {
	o.Images = v
}

func (o SimpleImageListDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["images"] = o.Images
	}
	return json.Marshal(toSerialize)
}

type NullableSimpleImageListDTO struct {
	value *SimpleImageListDTO
	isSet bool
}

func (v NullableSimpleImageListDTO) Get() *SimpleImageListDTO {
	return v.value
}

func (v *NullableSimpleImageListDTO) Set(val *SimpleImageListDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableSimpleImageListDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableSimpleImageListDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSimpleImageListDTO(val *SimpleImageListDTO) *NullableSimpleImageListDTO {
	return &NullableSimpleImageListDTO{value: val, isSet: true}
}

func (v NullableSimpleImageListDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSimpleImageListDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


