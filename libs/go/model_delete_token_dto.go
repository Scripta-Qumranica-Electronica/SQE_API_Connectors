/*
 * SQE API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DeleteTokenDTO struct for DeleteTokenDTO
type DeleteTokenDTO struct {
	EditionId int32 `json:"editionId"`
	Token string `json:"token"`
}

// NewDeleteTokenDTO instantiates a new DeleteTokenDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteTokenDTO(editionId int32, token string, ) *DeleteTokenDTO {
	this := DeleteTokenDTO{}
	this.EditionId = editionId
	this.Token = token
	return &this
}

// NewDeleteTokenDTOWithDefaults instantiates a new DeleteTokenDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteTokenDTOWithDefaults() *DeleteTokenDTO {
	this := DeleteTokenDTO{}
	return &this
}

// GetEditionId returns the EditionId field value
func (o *DeleteTokenDTO) GetEditionId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.EditionId
}

// GetEditionIdOk returns a tuple with the EditionId field value
// and a boolean to check if the value has been set.
func (o *DeleteTokenDTO) GetEditionIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EditionId, true
}

// SetEditionId sets field value
func (o *DeleteTokenDTO) SetEditionId(v int32) {
	o.EditionId = v
}

// GetToken returns the Token field value
func (o *DeleteTokenDTO) GetToken() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *DeleteTokenDTO) GetTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *DeleteTokenDTO) SetToken(v string) {
	o.Token = v
}

func (o DeleteTokenDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["editionId"] = o.EditionId
	}
	if true {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteTokenDTO struct {
	value *DeleteTokenDTO
	isSet bool
}

func (v NullableDeleteTokenDTO) Get() *DeleteTokenDTO {
	return v.value
}

func (v *NullableDeleteTokenDTO) Set(val *DeleteTokenDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteTokenDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteTokenDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteTokenDTO(val *DeleteTokenDTO) *NullableDeleteTokenDTO {
	return &NullableDeleteTokenDTO{value: val, isSet: true}
}

func (v NullableDeleteTokenDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteTokenDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


