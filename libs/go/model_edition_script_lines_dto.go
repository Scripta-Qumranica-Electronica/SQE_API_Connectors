/*
 * SQE API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EditionScriptLinesDTO struct for EditionScriptLinesDTO
type EditionScriptLinesDTO struct {
	TextFragments []ScriptTextFragmentDTO `json:"textFragments"`
}

// NewEditionScriptLinesDTO instantiates a new EditionScriptLinesDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditionScriptLinesDTO(textFragments []ScriptTextFragmentDTO, ) *EditionScriptLinesDTO {
	this := EditionScriptLinesDTO{}
	this.TextFragments = textFragments
	return &this
}

// NewEditionScriptLinesDTOWithDefaults instantiates a new EditionScriptLinesDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditionScriptLinesDTOWithDefaults() *EditionScriptLinesDTO {
	this := EditionScriptLinesDTO{}
	return &this
}

// GetTextFragments returns the TextFragments field value
func (o *EditionScriptLinesDTO) GetTextFragments() []ScriptTextFragmentDTO {
	if o == nil  {
		var ret []ScriptTextFragmentDTO
		return ret
	}

	return o.TextFragments
}

// GetTextFragmentsOk returns a tuple with the TextFragments field value
// and a boolean to check if the value has been set.
func (o *EditionScriptLinesDTO) GetTextFragmentsOk() (*[]ScriptTextFragmentDTO, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TextFragments, true
}

// SetTextFragments sets field value
func (o *EditionScriptLinesDTO) SetTextFragments(v []ScriptTextFragmentDTO) {
	o.TextFragments = v
}

func (o EditionScriptLinesDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["textFragments"] = o.TextFragments
	}
	return json.Marshal(toSerialize)
}

type NullableEditionScriptLinesDTO struct {
	value *EditionScriptLinesDTO
	isSet bool
}

func (v NullableEditionScriptLinesDTO) Get() *EditionScriptLinesDTO {
	return v.value
}

func (v *NullableEditionScriptLinesDTO) Set(val *EditionScriptLinesDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableEditionScriptLinesDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableEditionScriptLinesDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditionScriptLinesDTO(val *EditionScriptLinesDTO) *NullableEditionScriptLinesDTO {
	return &NullableEditionScriptLinesDTO{value: val, isSet: true}
}

func (v NullableEditionScriptLinesDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditionScriptLinesDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


