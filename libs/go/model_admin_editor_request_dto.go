/*
 * SQE API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// AdminEditorRequestDTO struct for AdminEditorRequestDTO
type AdminEditorRequestDTO struct {
	EditorName NullableString `json:"editorName,omitempty"`
	EditorEmail string `json:"editorEmail"`
	EditionId int32 `json:"editionId"`
	EditionName string `json:"editionName"`
	Date time.Time `json:"date"`
	MayLock bool `json:"mayLock"`
	MayRead bool `json:"mayRead"`
	MayWrite bool `json:"mayWrite"`
	IsAdmin bool `json:"isAdmin"`
}

// NewAdminEditorRequestDTO instantiates a new AdminEditorRequestDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdminEditorRequestDTO(editorEmail string, editionId int32, editionName string, date time.Time, mayLock bool, mayRead bool, mayWrite bool, isAdmin bool, ) *AdminEditorRequestDTO {
	this := AdminEditorRequestDTO{}
	this.EditorEmail = editorEmail
	this.EditionId = editionId
	this.EditionName = editionName
	this.Date = date
	this.MayLock = mayLock
	this.MayRead = mayRead
	this.MayWrite = mayWrite
	this.IsAdmin = isAdmin
	return &this
}

// NewAdminEditorRequestDTOWithDefaults instantiates a new AdminEditorRequestDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdminEditorRequestDTOWithDefaults() *AdminEditorRequestDTO {
	this := AdminEditorRequestDTO{}
	return &this
}

// GetEditorName returns the EditorName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AdminEditorRequestDTO) GetEditorName() string {
	if o == nil || o.EditorName.Get() == nil {
		var ret string
		return ret
	}
	return *o.EditorName.Get()
}

// GetEditorNameOk returns a tuple with the EditorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AdminEditorRequestDTO) GetEditorNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EditorName.Get(), o.EditorName.IsSet()
}

// HasEditorName returns a boolean if a field has been set.
func (o *AdminEditorRequestDTO) HasEditorName() bool {
	if o != nil && o.EditorName.IsSet() {
		return true
	}

	return false
}

// SetEditorName gets a reference to the given NullableString and assigns it to the EditorName field.
func (o *AdminEditorRequestDTO) SetEditorName(v string) {
	o.EditorName.Set(&v)
}
// SetEditorNameNil sets the value for EditorName to be an explicit nil
func (o *AdminEditorRequestDTO) SetEditorNameNil() {
	o.EditorName.Set(nil)
}

// UnsetEditorName ensures that no value is present for EditorName, not even an explicit nil
func (o *AdminEditorRequestDTO) UnsetEditorName() {
	o.EditorName.Unset()
}

// GetEditorEmail returns the EditorEmail field value
func (o *AdminEditorRequestDTO) GetEditorEmail() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.EditorEmail
}

// GetEditorEmailOk returns a tuple with the EditorEmail field value
// and a boolean to check if the value has been set.
func (o *AdminEditorRequestDTO) GetEditorEmailOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EditorEmail, true
}

// SetEditorEmail sets field value
func (o *AdminEditorRequestDTO) SetEditorEmail(v string) {
	o.EditorEmail = v
}

// GetEditionId returns the EditionId field value
func (o *AdminEditorRequestDTO) GetEditionId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.EditionId
}

// GetEditionIdOk returns a tuple with the EditionId field value
// and a boolean to check if the value has been set.
func (o *AdminEditorRequestDTO) GetEditionIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EditionId, true
}

// SetEditionId sets field value
func (o *AdminEditorRequestDTO) SetEditionId(v int32) {
	o.EditionId = v
}

// GetEditionName returns the EditionName field value
func (o *AdminEditorRequestDTO) GetEditionName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.EditionName
}

// GetEditionNameOk returns a tuple with the EditionName field value
// and a boolean to check if the value has been set.
func (o *AdminEditorRequestDTO) GetEditionNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EditionName, true
}

// SetEditionName sets field value
func (o *AdminEditorRequestDTO) SetEditionName(v string) {
	o.EditionName = v
}

// GetDate returns the Date field value
func (o *AdminEditorRequestDTO) GetDate() time.Time {
	if o == nil  {
		var ret time.Time
		return ret
	}

	return o.Date
}

// GetDateOk returns a tuple with the Date field value
// and a boolean to check if the value has been set.
func (o *AdminEditorRequestDTO) GetDateOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Date, true
}

// SetDate sets field value
func (o *AdminEditorRequestDTO) SetDate(v time.Time) {
	o.Date = v
}

// GetMayLock returns the MayLock field value
func (o *AdminEditorRequestDTO) GetMayLock() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.MayLock
}

// GetMayLockOk returns a tuple with the MayLock field value
// and a boolean to check if the value has been set.
func (o *AdminEditorRequestDTO) GetMayLockOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MayLock, true
}

// SetMayLock sets field value
func (o *AdminEditorRequestDTO) SetMayLock(v bool) {
	o.MayLock = v
}

// GetMayRead returns the MayRead field value
func (o *AdminEditorRequestDTO) GetMayRead() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.MayRead
}

// GetMayReadOk returns a tuple with the MayRead field value
// and a boolean to check if the value has been set.
func (o *AdminEditorRequestDTO) GetMayReadOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MayRead, true
}

// SetMayRead sets field value
func (o *AdminEditorRequestDTO) SetMayRead(v bool) {
	o.MayRead = v
}

// GetMayWrite returns the MayWrite field value
func (o *AdminEditorRequestDTO) GetMayWrite() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.MayWrite
}

// GetMayWriteOk returns a tuple with the MayWrite field value
// and a boolean to check if the value has been set.
func (o *AdminEditorRequestDTO) GetMayWriteOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MayWrite, true
}

// SetMayWrite sets field value
func (o *AdminEditorRequestDTO) SetMayWrite(v bool) {
	o.MayWrite = v
}

// GetIsAdmin returns the IsAdmin field value
func (o *AdminEditorRequestDTO) GetIsAdmin() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.IsAdmin
}

// GetIsAdminOk returns a tuple with the IsAdmin field value
// and a boolean to check if the value has been set.
func (o *AdminEditorRequestDTO) GetIsAdminOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IsAdmin, true
}

// SetIsAdmin sets field value
func (o *AdminEditorRequestDTO) SetIsAdmin(v bool) {
	o.IsAdmin = v
}

func (o AdminEditorRequestDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EditorName.IsSet() {
		toSerialize["editorName"] = o.EditorName.Get()
	}
	if true {
		toSerialize["editorEmail"] = o.EditorEmail
	}
	if true {
		toSerialize["editionId"] = o.EditionId
	}
	if true {
		toSerialize["editionName"] = o.EditionName
	}
	if true {
		toSerialize["date"] = o.Date
	}
	if true {
		toSerialize["mayLock"] = o.MayLock
	}
	if true {
		toSerialize["mayRead"] = o.MayRead
	}
	if true {
		toSerialize["mayWrite"] = o.MayWrite
	}
	if true {
		toSerialize["isAdmin"] = o.IsAdmin
	}
	return json.Marshal(toSerialize)
}

type NullableAdminEditorRequestDTO struct {
	value *AdminEditorRequestDTO
	isSet bool
}

func (v NullableAdminEditorRequestDTO) Get() *AdminEditorRequestDTO {
	return v.value
}

func (v *NullableAdminEditorRequestDTO) Set(val *AdminEditorRequestDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableAdminEditorRequestDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableAdminEditorRequestDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdminEditorRequestDTO(val *AdminEditorRequestDTO) *NullableAdminEditorRequestDTO {
	return &NullableAdminEditorRequestDTO{value: val, isSet: true}
}

func (v NullableAdminEditorRequestDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdminEditorRequestDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


