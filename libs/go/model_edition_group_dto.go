/*
 * SQE API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EditionGroupDTO struct for EditionGroupDTO
type EditionGroupDTO struct {
	Primary EditionDTO `json:"primary"`
	Others []EditionDTO `json:"others"`
}

// NewEditionGroupDTO instantiates a new EditionGroupDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditionGroupDTO(primary EditionDTO, others []EditionDTO, ) *EditionGroupDTO {
	this := EditionGroupDTO{}
	this.Primary = primary
	this.Others = others
	return &this
}

// NewEditionGroupDTOWithDefaults instantiates a new EditionGroupDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditionGroupDTOWithDefaults() *EditionGroupDTO {
	this := EditionGroupDTO{}
	return &this
}

// GetPrimary returns the Primary field value
func (o *EditionGroupDTO) GetPrimary() EditionDTO {
	if o == nil  {
		var ret EditionDTO
		return ret
	}

	return o.Primary
}

// GetPrimaryOk returns a tuple with the Primary field value
// and a boolean to check if the value has been set.
func (o *EditionGroupDTO) GetPrimaryOk() (*EditionDTO, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Primary, true
}

// SetPrimary sets field value
func (o *EditionGroupDTO) SetPrimary(v EditionDTO) {
	o.Primary = v
}

// GetOthers returns the Others field value
func (o *EditionGroupDTO) GetOthers() []EditionDTO {
	if o == nil  {
		var ret []EditionDTO
		return ret
	}

	return o.Others
}

// GetOthersOk returns a tuple with the Others field value
// and a boolean to check if the value has been set.
func (o *EditionGroupDTO) GetOthersOk() (*[]EditionDTO, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Others, true
}

// SetOthers sets field value
func (o *EditionGroupDTO) SetOthers(v []EditionDTO) {
	o.Others = v
}

func (o EditionGroupDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["primary"] = o.Primary
	}
	if true {
		toSerialize["others"] = o.Others
	}
	return json.Marshal(toSerialize)
}

type NullableEditionGroupDTO struct {
	value *EditionGroupDTO
	isSet bool
}

func (v NullableEditionGroupDTO) Get() *EditionGroupDTO {
	return v.value
}

func (v *NullableEditionGroupDTO) Set(val *EditionGroupDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableEditionGroupDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableEditionGroupDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditionGroupDTO(val *EditionGroupDTO) *NullableEditionGroupDTO {
	return &NullableEditionGroupDTO{value: val, isSet: true}
}

func (v NullableEditionGroupDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditionGroupDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


