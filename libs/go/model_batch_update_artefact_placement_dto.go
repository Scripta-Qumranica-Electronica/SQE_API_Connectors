/*
 * SQE API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BatchUpdateArtefactPlacementDTO struct for BatchUpdateArtefactPlacementDTO
type BatchUpdateArtefactPlacementDTO struct {
	ArtefactPlacements []UpdateArtefactPlacementDTO `json:"artefactPlacements"`
}

// NewBatchUpdateArtefactPlacementDTO instantiates a new BatchUpdateArtefactPlacementDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchUpdateArtefactPlacementDTO(artefactPlacements []UpdateArtefactPlacementDTO, ) *BatchUpdateArtefactPlacementDTO {
	this := BatchUpdateArtefactPlacementDTO{}
	this.ArtefactPlacements = artefactPlacements
	return &this
}

// NewBatchUpdateArtefactPlacementDTOWithDefaults instantiates a new BatchUpdateArtefactPlacementDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchUpdateArtefactPlacementDTOWithDefaults() *BatchUpdateArtefactPlacementDTO {
	this := BatchUpdateArtefactPlacementDTO{}
	return &this
}

// GetArtefactPlacements returns the ArtefactPlacements field value
func (o *BatchUpdateArtefactPlacementDTO) GetArtefactPlacements() []UpdateArtefactPlacementDTO {
	if o == nil  {
		var ret []UpdateArtefactPlacementDTO
		return ret
	}

	return o.ArtefactPlacements
}

// GetArtefactPlacementsOk returns a tuple with the ArtefactPlacements field value
// and a boolean to check if the value has been set.
func (o *BatchUpdateArtefactPlacementDTO) GetArtefactPlacementsOk() (*[]UpdateArtefactPlacementDTO, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ArtefactPlacements, true
}

// SetArtefactPlacements sets field value
func (o *BatchUpdateArtefactPlacementDTO) SetArtefactPlacements(v []UpdateArtefactPlacementDTO) {
	o.ArtefactPlacements = v
}

func (o BatchUpdateArtefactPlacementDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["artefactPlacements"] = o.ArtefactPlacements
	}
	return json.Marshal(toSerialize)
}

type NullableBatchUpdateArtefactPlacementDTO struct {
	value *BatchUpdateArtefactPlacementDTO
	isSet bool
}

func (v NullableBatchUpdateArtefactPlacementDTO) Get() *BatchUpdateArtefactPlacementDTO {
	return v.value
}

func (v *NullableBatchUpdateArtefactPlacementDTO) Set(val *BatchUpdateArtefactPlacementDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchUpdateArtefactPlacementDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchUpdateArtefactPlacementDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchUpdateArtefactPlacementDTO(val *BatchUpdateArtefactPlacementDTO) *NullableBatchUpdateArtefactPlacementDTO {
	return &NullableBatchUpdateArtefactPlacementDTO{value: val, isSet: true}
}

func (v NullableBatchUpdateArtefactPlacementDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchUpdateArtefactPlacementDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


